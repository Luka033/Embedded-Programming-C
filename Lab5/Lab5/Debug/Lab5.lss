
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000009a2  00000a16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009a2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000a26  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a58  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000807  00000000  00000000  00000ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f4  00000000  00000000  000012df  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f3  00000000  00000000  000019d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  00001cc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000387  00000000  00000000  00001d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000195  00000000  00000000  000020d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002268  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
   4:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
   8:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
   c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  10:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  14:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  18:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  1c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  20:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  24:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  28:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  2c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  30:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  34:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  38:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  3c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  44:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  48:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  4c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  50:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  54:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  58:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  5c:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  60:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  64:	0c 94 8a 00 	jmp	0x114	; 0x114 <__bad_interrupt>
  68:	07 63       	ori	r16, 0x37	; 55
  6a:	42 36       	cpi	r20, 0x62	; 98
  6c:	b7 9b       	sbis	0x16, 7	; 22
  6e:	d8 a7       	std	Y+40, r29	; 0x28
  70:	1a 39       	cpi	r17, 0x9A	; 154
  72:	68 56       	subi	r22, 0x68	; 104
  74:	18 ae       	std	Y+56, r1	; 0x38
  76:	ba ab       	std	Y+50, r27	; 0x32
  78:	55 8c       	ldd	r5, Z+29	; 0x1d
  7a:	1d 3c       	cpi	r17, 0xCD	; 205
  7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
  7e:	57 63       	ori	r21, 0x37	; 55
  80:	bd 6d       	ori	r27, 0xDD	; 221
  82:	ed fd       	.word	0xfded	; ????
  84:	75 3e       	cpi	r23, 0xE5	; 229
  86:	f6 17       	cp	r31, r22
  88:	72 31       	cpi	r23, 0x12	; 18
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	08 00       	.word	0x0008	; ????
  92:	00 00       	nop
  94:	be 92       	st	-X, r11
  96:	24 49       	sbci	r18, 0x94	; 148
  98:	12 3e       	cpi	r17, 0xE2	; 226
  9a:	ab aa       	std	Y+51, r10	; 0x33
  9c:	aa 2a       	or	r10, r26
  9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
  a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
  a2:	4c 3e       	cpi	r20, 0xEC	; 236
  a4:	00 00       	nop
  a6:	00 80       	ld	r0, Z
  a8:	be ab       	std	Y+54, r27	; 0x36
  aa:	aa aa       	std	Y+50, r10	; 0x32
  ac:	aa 3e       	cpi	r26, 0xEA	; 234
  ae:	00 00       	nop
  b0:	00 00       	nop
  b2:	bf 00       	.word	0x00bf	; ????
  b4:	00 00       	nop
  b6:	80 3f       	cpi	r24, 0xF0	; 240
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	00 08       	sbc	r0, r0
  be:	41 78       	andi	r20, 0x81	; 129
  c0:	d3 bb       	out	0x13, r29	; 19
  c2:	43 87       	std	Z+11, r20	; 0x0b
  c4:	d1 13       	cpse	r29, r17
  c6:	3d 19       	sub	r19, r13
  c8:	0e 3c       	cpi	r16, 0xCE	; 206
  ca:	c3 bd       	out	0x23, r28	; 35
  cc:	42 82       	std	Z+2, r4	; 0x02
  ce:	ad 2b       	or	r26, r29
  d0:	3e 68       	ori	r19, 0x8E	; 142
  d2:	ec 82       	std	Y+4, r14	; 0x04
  d4:	76 be       	out	0x36, r7	; 54
  d6:	d9 8f       	std	Y+25, r29	; 0x19
  d8:	e1 a9       	ldd	r30, Z+49	; 0x31
  da:	3e 4c       	sbci	r19, 0xCE	; 206
  dc:	80 ef       	ldi	r24, 0xF0	; 240
  de:	ff be       	out	0x3f, r15	; 63
  e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <__addsf3x+0xc>
  e2:	ff 7f       	andi	r31, 0xFF	; 255
  e4:	3f 00       	.word	0x003f	; ????
  e6:	00 00       	nop
	...

000000ea <__ctors_end>:
  ea:	11 24       	eor	r1, r1
  ec:	1f be       	out	0x3f, r1	; 63
  ee:	cf ef       	ldi	r28, 0xFF	; 255
  f0:	d8 e0       	ldi	r29, 0x08	; 8
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
  f6:	11 e0       	ldi	r17, 0x01	; 1
  f8:	a0 e0       	ldi	r26, 0x00	; 0
  fa:	b1 e0       	ldi	r27, 0x01	; 1
  fc:	e2 ea       	ldi	r30, 0xA2	; 162
  fe:	f9 e0       	ldi	r31, 0x09	; 9
 100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
 102:	05 90       	lpm	r0, Z+
 104:	0d 92       	st	X+, r0
 106:	a0 31       	cpi	r26, 0x10	; 16
 108:	b1 07       	cpc	r27, r17
 10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>
 10c:	0e 94 3c 01 	call	0x278	; 0x278 <main>
 110:	0c 94 cf 04 	jmp	0x99e	; 0x99e <_exit>

00000114 <__bad_interrupt>:
 114:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000118 <init>:
	{8, 9, 10, 11},
	{12, 13, 14, 15}
};

void init(void) {
	DDRD |= (1 << DDD4) | (1 << DDD5) | (1 << DDD6) | (1 << DDD7);				// set rows as output
 118:	8a b1       	in	r24, 0x0a	; 10
 11a:	80 6f       	ori	r24, 0xF0	; 240
 11c:	8a b9       	out	0x0a, r24	; 10
	DDRB &= ~(1 << DDB0) & ~(1 << DDB1) & ~(1 << DDB2) & ~(1 << DDB3);			// set columns as input
 11e:	84 b1       	in	r24, 0x04	; 4
 120:	80 7f       	andi	r24, 0xF0	; 240
 122:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PORTB0) | (1 << PORTB1) | (1 << PORTB2) | (1 << PORTB3);		// enable internal pull up resistors for columns
 124:	85 b1       	in	r24, 0x05	; 5
 126:	8f 60       	ori	r24, 0x0F	; 15
 128:	85 b9       	out	0x05, r24	; 5
	PORTD |= (1 << 4 | 1 << 5 | 1 << 6 | 1 << 7);								// set all rows output as high
 12a:	8b b1       	in	r24, 0x0b	; 11
 12c:	80 6f       	ori	r24, 0xF0	; 240
 12e:	8b b9       	out	0x0b, r24	; 11
	TCCR2A |= (1 << WGM20) | (1 << WGM21) | (1 << COM2B1);						// enable timer 2 PWM output mode
 130:	e0 eb       	ldi	r30, 0xB0	; 176
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	83 62       	ori	r24, 0x23	; 35
 138:	80 83       	st	Z, r24
	TCCR2B |= (1 << WGM22) | (1 << CS22) | (1 << CS21);							// enable timer 2 waveform generation with pre-scaler = 256
 13a:	e1 eb       	ldi	r30, 0xB1	; 177
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	8e 60       	ori	r24, 0x0E	; 14
 142:	80 83       	st	Z, r24
	DDRD |= (1 << DDD3);														// set D3 as output for speaker
 144:	8a b1       	in	r24, 0x0a	; 10
 146:	88 60       	ori	r24, 0x08	; 8
 148:	8a b9       	out	0x0a, r24	; 10
 14a:	08 95       	ret

0000014c <getStepSize>:
}

uint8_t getStepSize(uint8_t x) {
	float period = 1 / (440 * pow(pow(2, (1 / 12.0)), x)) * pow(10, 6.0);
 14c:	68 2f       	mov	r22, r24
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <__floatunsisf>
 158:	9b 01       	movw	r18, r22
 15a:	ac 01       	movw	r20, r24
 15c:	6d e7       	ldi	r22, 0x7D	; 125
 15e:	7c e9       	ldi	r23, 0x9C	; 156
 160:	87 e8       	ldi	r24, 0x87	; 135
 162:	9f e3       	ldi	r25, 0x3F	; 63
 164:	0e 94 dd 02 	call	0x5ba	; 0x5ba <pow>
 168:	20 e0       	ldi	r18, 0x00	; 0
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	4c ed       	ldi	r20, 0xDC	; 220
 16e:	53 e4       	ldi	r21, 0x43	; 67
 170:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__mulsf3>
 174:	9b 01       	movw	r18, r22
 176:	ac 01       	movw	r20, r24
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	80 e8       	ldi	r24, 0x80	; 128
 17e:	9f e3       	ldi	r25, 0x3F	; 63
 180:	0e 94 41 01 	call	0x282	; 0x282 <__divsf3>
 184:	20 e0       	ldi	r18, 0x00	; 0
 186:	34 e2       	ldi	r19, 0x24	; 36
 188:	44 e7       	ldi	r20, 0x74	; 116
 18a:	59 e4       	ldi	r21, 0x49	; 73
 18c:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__mulsf3>
	period = (256 * period) / 4096;
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	40 e8       	ldi	r20, 0x80	; 128
 196:	53 e4       	ldi	r21, 0x43	; 67
 198:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__mulsf3>
 19c:	20 e0       	ldi	r18, 0x00	; 0
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	40 e8       	ldi	r20, 0x80	; 128
 1a2:	59 e3       	ldi	r21, 0x39	; 57
 1a4:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__mulsf3>
	return (uint8_t)period - 1;
 1a8:	0e 94 b3 01 	call	0x366	; 0x366 <__fixunssfsi>
}
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	86 0f       	add	r24, r22
 1b0:	08 95       	ret

000001b2 <playTone>:

void playTone(uint8_t i, uint8_t j) {
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	d8 2f       	mov	r29, r24
 1b8:	c6 2f       	mov	r28, r22
	while(!(PINB & (1 << j))) {													// check which columns is pulled low
 1ba:	21 c0       	rjmp	.+66     	; 0x1fe <playTone+0x4c>
		uint8_t stepSize = getStepSize(keyNotes[i][j]);							// get the step s	
 1bc:	8d 2f       	mov	r24, r29
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	80 50       	subi	r24, 0x00	; 0
 1ca:	9f 4f       	sbci	r25, 0xFF	; 255
 1cc:	fc 01       	movw	r30, r24
 1ce:	e2 0f       	add	r30, r18
 1d0:	f3 1f       	adc	r31, r19
 1d2:	80 81       	ld	r24, Z
 1d4:	0e 94 a6 00 	call	0x14c	; 0x14c <getStepSize>
		OCR2A = stepSize;														// set frequency
 1d8:	e3 eb       	ldi	r30, 0xB3	; 179
 1da:	f0 e0       	ldi	r31, 0x00	; 0
 1dc:	80 83       	st	Z, r24
		OCR2B = OCR2A * DUTY_CYCLE;												// 50% duty cycle
 1de:	60 81       	ld	r22, Z
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__floatsisf>
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	5f e3       	ldi	r21, 0x3F	; 63
 1f2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__mulsf3>
 1f6:	0e 94 b3 01 	call	0x366	; 0x366 <__fixunssfsi>
 1fa:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	period = (256 * period) / 4096;
	return (uint8_t)period - 1;
}

void playTone(uint8_t i, uint8_t j) {
	while(!(PINB & (1 << j))) {													// check which columns is pulled low
 1fe:	83 b1       	in	r24, 0x03	; 3
 200:	2c 2f       	mov	r18, r28
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0c 2e       	mov	r0, r28
 208:	02 c0       	rjmp	.+4      	; 0x20e <playTone+0x5c>
 20a:	95 95       	asr	r25
 20c:	87 95       	ror	r24
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <playTone+0x58>
 212:	80 ff       	sbrs	r24, 0
 214:	d3 cf       	rjmp	.-90     	; 0x1bc <playTone+0xa>
		uint8_t stepSize = getStepSize(keyNotes[i][j]);							// get the step s	
		OCR2A = stepSize;														// set frequency
		OCR2B = OCR2A * DUTY_CYCLE;												// 50% duty cycle
	}
	OCR2A = 0;																	// reset period
 216:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	OCR2B = 0;																	// reset duty cycle
 21a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
}
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <scan_keypad>:


void scan_keypad() {
 224:	0f 93       	push	r16
 226:	1f 93       	push	r17
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
	for(uint8_t i = 0; i < ROWS; i++) {
 22c:	d0 e0       	ldi	r29, 0x00	; 0
 22e:	1d c0       	rjmp	.+58     	; 0x26a <scan_keypad+0x46>
		PORTD &= ~(1 << (i + ROWS));											// set i:th row to low (offset by 4 since we start at pin 4)
 230:	8b b1       	in	r24, 0x0b	; 11
 232:	2d 2f       	mov	r18, r29
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	2c 5f       	subi	r18, 0xFC	; 252
 238:	3f 4f       	sbci	r19, 0xFF	; 255
 23a:	01 e0       	ldi	r16, 0x01	; 1
 23c:	10 e0       	ldi	r17, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <scan_keypad+0x20>
 240:	00 0f       	add	r16, r16
 242:	11 1f       	adc	r17, r17
 244:	2a 95       	dec	r18
 246:	e2 f7       	brpl	.-8      	; 0x240 <scan_keypad+0x1c>
 248:	90 2f       	mov	r25, r16
 24a:	90 95       	com	r25
 24c:	89 23       	and	r24, r25
 24e:	8b b9       	out	0x0b, r24	; 11
		for(uint8_t j = 0; j < COLS; j++) {
 250:	c0 e0       	ldi	r28, 0x00	; 0
 252:	05 c0       	rjmp	.+10     	; 0x25e <scan_keypad+0x3a>
			playTone(i, j);
 254:	6c 2f       	mov	r22, r28
 256:	8d 2f       	mov	r24, r29
 258:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <playTone>


void scan_keypad() {
	for(uint8_t i = 0; i < ROWS; i++) {
		PORTD &= ~(1 << (i + ROWS));											// set i:th row to low (offset by 4 since we start at pin 4)
		for(uint8_t j = 0; j < COLS; j++) {
 25c:	cf 5f       	subi	r28, 0xFF	; 255
 25e:	c4 30       	cpi	r28, 0x04	; 4
 260:	c8 f3       	brcs	.-14     	; 0x254 <scan_keypad+0x30>
			playTone(i, j);
		}
		PORTD |= (1 << (i + ROWS));												// set the i:th row back to high (offset by 4 since we start at pin 4)
 262:	8b b1       	in	r24, 0x0b	; 11
 264:	08 2b       	or	r16, r24
 266:	0b b9       	out	0x0b, r16	; 11
	OCR2B = 0;																	// reset duty cycle
}


void scan_keypad() {
	for(uint8_t i = 0; i < ROWS; i++) {
 268:	df 5f       	subi	r29, 0xFF	; 255
 26a:	d4 30       	cpi	r29, 0x04	; 4
 26c:	08 f3       	brcs	.-62     	; 0x230 <scan_keypad+0xc>
		for(uint8_t j = 0; j < COLS; j++) {
			playTone(i, j);
		}
		PORTD |= (1 << (i + ROWS));												// set the i:th row back to high (offset by 4 since we start at pin 4)
	}
}
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	1f 91       	pop	r17
 274:	0f 91       	pop	r16
 276:	08 95       	ret

00000278 <main>:


int main(void)
{
	init();
 278:	0e 94 8c 00 	call	0x118	; 0x118 <init>
		
	while (1)
	{
		scan_keypad();
 27c:	0e 94 12 01 	call	0x224	; 0x224 <scan_keypad>
 280:	fd cf       	rjmp	.-6      	; 0x27c <main+0x4>

00000282 <__divsf3>:
 282:	0e 94 55 01 	call	0x2aa	; 0x2aa <__divsf3x>
 286:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_round>
 28a:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscB>
 28e:	58 f0       	brcs	.+22     	; 0x2a6 <__divsf3+0x24>
 290:	0e 94 28 02 	call	0x450	; 0x450 <__fp_pscA>
 294:	40 f0       	brcs	.+16     	; 0x2a6 <__divsf3+0x24>
 296:	29 f4       	brne	.+10     	; 0x2a2 <__divsf3+0x20>
 298:	5f 3f       	cpi	r21, 0xFF	; 255
 29a:	29 f0       	breq	.+10     	; 0x2a6 <__divsf3+0x24>
 29c:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>
 2a0:	51 11       	cpse	r21, r1
 2a2:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_szero>
 2a6:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_nan>

000002aa <__divsf3x>:
 2aa:	0e 94 47 02 	call	0x48e	; 0x48e <__fp_split3>
 2ae:	68 f3       	brcs	.-38     	; 0x28a <__divsf3+0x8>

000002b0 <__divsf3_pse>:
 2b0:	99 23       	and	r25, r25
 2b2:	b1 f3       	breq	.-20     	; 0x2a0 <__divsf3+0x1e>
 2b4:	55 23       	and	r21, r21
 2b6:	91 f3       	breq	.-28     	; 0x29c <__divsf3+0x1a>
 2b8:	95 1b       	sub	r25, r21
 2ba:	55 0b       	sbc	r21, r21
 2bc:	bb 27       	eor	r27, r27
 2be:	aa 27       	eor	r26, r26
 2c0:	62 17       	cp	r22, r18
 2c2:	73 07       	cpc	r23, r19
 2c4:	84 07       	cpc	r24, r20
 2c6:	38 f0       	brcs	.+14     	; 0x2d6 <__divsf3_pse+0x26>
 2c8:	9f 5f       	subi	r25, 0xFF	; 255
 2ca:	5f 4f       	sbci	r21, 0xFF	; 255
 2cc:	22 0f       	add	r18, r18
 2ce:	33 1f       	adc	r19, r19
 2d0:	44 1f       	adc	r20, r20
 2d2:	aa 1f       	adc	r26, r26
 2d4:	a9 f3       	breq	.-22     	; 0x2c0 <__divsf3_pse+0x10>
 2d6:	35 d0       	rcall	.+106    	; 0x342 <__divsf3_pse+0x92>
 2d8:	0e 2e       	mov	r0, r30
 2da:	3a f0       	brmi	.+14     	; 0x2ea <__divsf3_pse+0x3a>
 2dc:	e0 e8       	ldi	r30, 0x80	; 128
 2de:	32 d0       	rcall	.+100    	; 0x344 <__divsf3_pse+0x94>
 2e0:	91 50       	subi	r25, 0x01	; 1
 2e2:	50 40       	sbci	r21, 0x00	; 0
 2e4:	e6 95       	lsr	r30
 2e6:	00 1c       	adc	r0, r0
 2e8:	ca f7       	brpl	.-14     	; 0x2dc <__divsf3_pse+0x2c>
 2ea:	2b d0       	rcall	.+86     	; 0x342 <__divsf3_pse+0x92>
 2ec:	fe 2f       	mov	r31, r30
 2ee:	29 d0       	rcall	.+82     	; 0x342 <__divsf3_pse+0x92>
 2f0:	66 0f       	add	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	bb 1f       	adc	r27, r27
 2f8:	26 17       	cp	r18, r22
 2fa:	37 07       	cpc	r19, r23
 2fc:	48 07       	cpc	r20, r24
 2fe:	ab 07       	cpc	r26, r27
 300:	b0 e8       	ldi	r27, 0x80	; 128
 302:	09 f0       	breq	.+2      	; 0x306 <__divsf3_pse+0x56>
 304:	bb 0b       	sbc	r27, r27
 306:	80 2d       	mov	r24, r0
 308:	bf 01       	movw	r22, r30
 30a:	ff 27       	eor	r31, r31
 30c:	93 58       	subi	r25, 0x83	; 131
 30e:	5f 4f       	sbci	r21, 0xFF	; 255
 310:	3a f0       	brmi	.+14     	; 0x320 <__divsf3_pse+0x70>
 312:	9e 3f       	cpi	r25, 0xFE	; 254
 314:	51 05       	cpc	r21, r1
 316:	78 f0       	brcs	.+30     	; 0x336 <__divsf3_pse+0x86>
 318:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>
 31c:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_szero>
 320:	5f 3f       	cpi	r21, 0xFF	; 255
 322:	e4 f3       	brlt	.-8      	; 0x31c <__divsf3_pse+0x6c>
 324:	98 3e       	cpi	r25, 0xE8	; 232
 326:	d4 f3       	brlt	.-12     	; 0x31c <__divsf3_pse+0x6c>
 328:	86 95       	lsr	r24
 32a:	77 95       	ror	r23
 32c:	67 95       	ror	r22
 32e:	b7 95       	ror	r27
 330:	f7 95       	ror	r31
 332:	9f 5f       	subi	r25, 0xFF	; 255
 334:	c9 f7       	brne	.-14     	; 0x328 <__divsf3_pse+0x78>
 336:	88 0f       	add	r24, r24
 338:	91 1d       	adc	r25, r1
 33a:	96 95       	lsr	r25
 33c:	87 95       	ror	r24
 33e:	97 f9       	bld	r25, 7
 340:	08 95       	ret
 342:	e1 e0       	ldi	r30, 0x01	; 1
 344:	66 0f       	add	r22, r22
 346:	77 1f       	adc	r23, r23
 348:	88 1f       	adc	r24, r24
 34a:	bb 1f       	adc	r27, r27
 34c:	62 17       	cp	r22, r18
 34e:	73 07       	cpc	r23, r19
 350:	84 07       	cpc	r24, r20
 352:	ba 07       	cpc	r27, r26
 354:	20 f0       	brcs	.+8      	; 0x35e <__divsf3_pse+0xae>
 356:	62 1b       	sub	r22, r18
 358:	73 0b       	sbc	r23, r19
 35a:	84 0b       	sbc	r24, r20
 35c:	ba 0b       	sbc	r27, r26
 35e:	ee 1f       	adc	r30, r30
 360:	88 f7       	brcc	.-30     	; 0x344 <__divsf3_pse+0x94>
 362:	e0 95       	com	r30
 364:	08 95       	ret

00000366 <__fixunssfsi>:
 366:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_splitA>
 36a:	88 f0       	brcs	.+34     	; 0x38e <__fixunssfsi+0x28>
 36c:	9f 57       	subi	r25, 0x7F	; 127
 36e:	98 f0       	brcs	.+38     	; 0x396 <__fixunssfsi+0x30>
 370:	b9 2f       	mov	r27, r25
 372:	99 27       	eor	r25, r25
 374:	b7 51       	subi	r27, 0x17	; 23
 376:	b0 f0       	brcs	.+44     	; 0x3a4 <__fixunssfsi+0x3e>
 378:	e1 f0       	breq	.+56     	; 0x3b2 <__fixunssfsi+0x4c>
 37a:	66 0f       	add	r22, r22
 37c:	77 1f       	adc	r23, r23
 37e:	88 1f       	adc	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	1a f0       	brmi	.+6      	; 0x38a <__fixunssfsi+0x24>
 384:	ba 95       	dec	r27
 386:	c9 f7       	brne	.-14     	; 0x37a <__fixunssfsi+0x14>
 388:	14 c0       	rjmp	.+40     	; 0x3b2 <__fixunssfsi+0x4c>
 38a:	b1 30       	cpi	r27, 0x01	; 1
 38c:	91 f0       	breq	.+36     	; 0x3b2 <__fixunssfsi+0x4c>
 38e:	0e 94 69 02 	call	0x4d2	; 0x4d2 <__fp_zero>
 392:	b1 e0       	ldi	r27, 0x01	; 1
 394:	08 95       	ret
 396:	0c 94 69 02 	jmp	0x4d2	; 0x4d2 <__fp_zero>
 39a:	67 2f       	mov	r22, r23
 39c:	78 2f       	mov	r23, r24
 39e:	88 27       	eor	r24, r24
 3a0:	b8 5f       	subi	r27, 0xF8	; 248
 3a2:	39 f0       	breq	.+14     	; 0x3b2 <__fixunssfsi+0x4c>
 3a4:	b9 3f       	cpi	r27, 0xF9	; 249
 3a6:	cc f3       	brlt	.-14     	; 0x39a <__fixunssfsi+0x34>
 3a8:	86 95       	lsr	r24
 3aa:	77 95       	ror	r23
 3ac:	67 95       	ror	r22
 3ae:	b3 95       	inc	r27
 3b0:	d9 f7       	brne	.-10     	; 0x3a8 <__fixunssfsi+0x42>
 3b2:	3e f4       	brtc	.+14     	; 0x3c2 <__fixunssfsi+0x5c>
 3b4:	90 95       	com	r25
 3b6:	80 95       	com	r24
 3b8:	70 95       	com	r23
 3ba:	61 95       	neg	r22
 3bc:	7f 4f       	sbci	r23, 0xFF	; 255
 3be:	8f 4f       	sbci	r24, 0xFF	; 255
 3c0:	9f 4f       	sbci	r25, 0xFF	; 255
 3c2:	08 95       	ret

000003c4 <__floatunsisf>:
 3c4:	e8 94       	clt
 3c6:	09 c0       	rjmp	.+18     	; 0x3da <__floatsisf+0x12>

000003c8 <__floatsisf>:
 3c8:	97 fb       	bst	r25, 7
 3ca:	3e f4       	brtc	.+14     	; 0x3da <__floatsisf+0x12>
 3cc:	90 95       	com	r25
 3ce:	80 95       	com	r24
 3d0:	70 95       	com	r23
 3d2:	61 95       	neg	r22
 3d4:	7f 4f       	sbci	r23, 0xFF	; 255
 3d6:	8f 4f       	sbci	r24, 0xFF	; 255
 3d8:	9f 4f       	sbci	r25, 0xFF	; 255
 3da:	99 23       	and	r25, r25
 3dc:	a9 f0       	breq	.+42     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3de:	f9 2f       	mov	r31, r25
 3e0:	96 e9       	ldi	r25, 0x96	; 150
 3e2:	bb 27       	eor	r27, r27
 3e4:	93 95       	inc	r25
 3e6:	f6 95       	lsr	r31
 3e8:	87 95       	ror	r24
 3ea:	77 95       	ror	r23
 3ec:	67 95       	ror	r22
 3ee:	b7 95       	ror	r27
 3f0:	f1 11       	cpse	r31, r1
 3f2:	f8 cf       	rjmp	.-16     	; 0x3e4 <__floatsisf+0x1c>
 3f4:	fa f4       	brpl	.+62     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3f6:	bb 0f       	add	r27, r27
 3f8:	11 f4       	brne	.+4      	; 0x3fe <__floatsisf+0x36>
 3fa:	60 ff       	sbrs	r22, 0
 3fc:	1b c0       	rjmp	.+54     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3fe:	6f 5f       	subi	r22, 0xFF	; 255
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	8f 4f       	sbci	r24, 0xFF	; 255
 404:	9f 4f       	sbci	r25, 0xFF	; 255
 406:	16 c0       	rjmp	.+44     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 408:	88 23       	and	r24, r24
 40a:	11 f0       	breq	.+4      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 40c:	96 e9       	ldi	r25, 0x96	; 150
 40e:	11 c0       	rjmp	.+34     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 410:	77 23       	and	r23, r23
 412:	21 f0       	breq	.+8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 414:	9e e8       	ldi	r25, 0x8E	; 142
 416:	87 2f       	mov	r24, r23
 418:	76 2f       	mov	r23, r22
 41a:	05 c0       	rjmp	.+10     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 41c:	66 23       	and	r22, r22
 41e:	71 f0       	breq	.+28     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 420:	96 e8       	ldi	r25, 0x86	; 134
 422:	86 2f       	mov	r24, r22
 424:	70 e0       	ldi	r23, 0x00	; 0
 426:	60 e0       	ldi	r22, 0x00	; 0
 428:	2a f0       	brmi	.+10     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42a:	9a 95       	dec	r25
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	88 1f       	adc	r24, r24
 432:	da f7       	brpl	.-10     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 434:	88 0f       	add	r24, r24
 436:	96 95       	lsr	r25
 438:	87 95       	ror	r24
 43a:	97 f9       	bld	r25, 7
 43c:	08 95       	ret

0000043e <__fp_inf>:
 43e:	97 f9       	bld	r25, 7
 440:	9f 67       	ori	r25, 0x7F	; 127
 442:	80 e8       	ldi	r24, 0x80	; 128
 444:	70 e0       	ldi	r23, 0x00	; 0
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	08 95       	ret

0000044a <__fp_nan>:
 44a:	9f ef       	ldi	r25, 0xFF	; 255
 44c:	80 ec       	ldi	r24, 0xC0	; 192
 44e:	08 95       	ret

00000450 <__fp_pscA>:
 450:	00 24       	eor	r0, r0
 452:	0a 94       	dec	r0
 454:	16 16       	cp	r1, r22
 456:	17 06       	cpc	r1, r23
 458:	18 06       	cpc	r1, r24
 45a:	09 06       	cpc	r0, r25
 45c:	08 95       	ret

0000045e <__fp_pscB>:
 45e:	00 24       	eor	r0, r0
 460:	0a 94       	dec	r0
 462:	12 16       	cp	r1, r18
 464:	13 06       	cpc	r1, r19
 466:	14 06       	cpc	r1, r20
 468:	05 06       	cpc	r0, r21
 46a:	08 95       	ret

0000046c <__fp_round>:
 46c:	09 2e       	mov	r0, r25
 46e:	03 94       	inc	r0
 470:	00 0c       	add	r0, r0
 472:	11 f4       	brne	.+4      	; 0x478 <__fp_round+0xc>
 474:	88 23       	and	r24, r24
 476:	52 f0       	brmi	.+20     	; 0x48c <__fp_round+0x20>
 478:	bb 0f       	add	r27, r27
 47a:	40 f4       	brcc	.+16     	; 0x48c <__fp_round+0x20>
 47c:	bf 2b       	or	r27, r31
 47e:	11 f4       	brne	.+4      	; 0x484 <__fp_round+0x18>
 480:	60 ff       	sbrs	r22, 0
 482:	04 c0       	rjmp	.+8      	; 0x48c <__fp_round+0x20>
 484:	6f 5f       	subi	r22, 0xFF	; 255
 486:	7f 4f       	sbci	r23, 0xFF	; 255
 488:	8f 4f       	sbci	r24, 0xFF	; 255
 48a:	9f 4f       	sbci	r25, 0xFF	; 255
 48c:	08 95       	ret

0000048e <__fp_split3>:
 48e:	57 fd       	sbrc	r21, 7
 490:	90 58       	subi	r25, 0x80	; 128
 492:	44 0f       	add	r20, r20
 494:	55 1f       	adc	r21, r21
 496:	59 f0       	breq	.+22     	; 0x4ae <__fp_splitA+0x10>
 498:	5f 3f       	cpi	r21, 0xFF	; 255
 49a:	71 f0       	breq	.+28     	; 0x4b8 <__fp_splitA+0x1a>
 49c:	47 95       	ror	r20

0000049e <__fp_splitA>:
 49e:	88 0f       	add	r24, r24
 4a0:	97 fb       	bst	r25, 7
 4a2:	99 1f       	adc	r25, r25
 4a4:	61 f0       	breq	.+24     	; 0x4be <__fp_splitA+0x20>
 4a6:	9f 3f       	cpi	r25, 0xFF	; 255
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <__fp_splitA+0x2a>
 4aa:	87 95       	ror	r24
 4ac:	08 95       	ret
 4ae:	12 16       	cp	r1, r18
 4b0:	13 06       	cpc	r1, r19
 4b2:	14 06       	cpc	r1, r20
 4b4:	55 1f       	adc	r21, r21
 4b6:	f2 cf       	rjmp	.-28     	; 0x49c <__fp_split3+0xe>
 4b8:	46 95       	lsr	r20
 4ba:	f1 df       	rcall	.-30     	; 0x49e <__fp_splitA>
 4bc:	08 c0       	rjmp	.+16     	; 0x4ce <__fp_splitA+0x30>
 4be:	16 16       	cp	r1, r22
 4c0:	17 06       	cpc	r1, r23
 4c2:	18 06       	cpc	r1, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	f1 cf       	rjmp	.-30     	; 0x4aa <__fp_splitA+0xc>
 4c8:	86 95       	lsr	r24
 4ca:	71 05       	cpc	r23, r1
 4cc:	61 05       	cpc	r22, r1
 4ce:	08 94       	sec
 4d0:	08 95       	ret

000004d2 <__fp_zero>:
 4d2:	e8 94       	clt

000004d4 <__fp_szero>:
 4d4:	bb 27       	eor	r27, r27
 4d6:	66 27       	eor	r22, r22
 4d8:	77 27       	eor	r23, r23
 4da:	cb 01       	movw	r24, r22
 4dc:	97 f9       	bld	r25, 7
 4de:	08 95       	ret

000004e0 <__mulsf3>:
 4e0:	0e 94 83 02 	call	0x506	; 0x506 <__mulsf3x>
 4e4:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_round>
 4e8:	0e 94 28 02 	call	0x450	; 0x450 <__fp_pscA>
 4ec:	38 f0       	brcs	.+14     	; 0x4fc <__mulsf3+0x1c>
 4ee:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscB>
 4f2:	20 f0       	brcs	.+8      	; 0x4fc <__mulsf3+0x1c>
 4f4:	95 23       	and	r25, r21
 4f6:	11 f0       	breq	.+4      	; 0x4fc <__mulsf3+0x1c>
 4f8:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>
 4fc:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_nan>
 500:	11 24       	eor	r1, r1
 502:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_szero>

00000506 <__mulsf3x>:
 506:	0e 94 47 02 	call	0x48e	; 0x48e <__fp_split3>
 50a:	70 f3       	brcs	.-36     	; 0x4e8 <__mulsf3+0x8>

0000050c <__mulsf3_pse>:
 50c:	95 9f       	mul	r25, r21
 50e:	c1 f3       	breq	.-16     	; 0x500 <__mulsf3+0x20>
 510:	95 0f       	add	r25, r21
 512:	50 e0       	ldi	r21, 0x00	; 0
 514:	55 1f       	adc	r21, r21
 516:	62 9f       	mul	r22, r18
 518:	f0 01       	movw	r30, r0
 51a:	72 9f       	mul	r23, r18
 51c:	bb 27       	eor	r27, r27
 51e:	f0 0d       	add	r31, r0
 520:	b1 1d       	adc	r27, r1
 522:	63 9f       	mul	r22, r19
 524:	aa 27       	eor	r26, r26
 526:	f0 0d       	add	r31, r0
 528:	b1 1d       	adc	r27, r1
 52a:	aa 1f       	adc	r26, r26
 52c:	64 9f       	mul	r22, r20
 52e:	66 27       	eor	r22, r22
 530:	b0 0d       	add	r27, r0
 532:	a1 1d       	adc	r26, r1
 534:	66 1f       	adc	r22, r22
 536:	82 9f       	mul	r24, r18
 538:	22 27       	eor	r18, r18
 53a:	b0 0d       	add	r27, r0
 53c:	a1 1d       	adc	r26, r1
 53e:	62 1f       	adc	r22, r18
 540:	73 9f       	mul	r23, r19
 542:	b0 0d       	add	r27, r0
 544:	a1 1d       	adc	r26, r1
 546:	62 1f       	adc	r22, r18
 548:	83 9f       	mul	r24, r19
 54a:	a0 0d       	add	r26, r0
 54c:	61 1d       	adc	r22, r1
 54e:	22 1f       	adc	r18, r18
 550:	74 9f       	mul	r23, r20
 552:	33 27       	eor	r19, r19
 554:	a0 0d       	add	r26, r0
 556:	61 1d       	adc	r22, r1
 558:	23 1f       	adc	r18, r19
 55a:	84 9f       	mul	r24, r20
 55c:	60 0d       	add	r22, r0
 55e:	21 1d       	adc	r18, r1
 560:	82 2f       	mov	r24, r18
 562:	76 2f       	mov	r23, r22
 564:	6a 2f       	mov	r22, r26
 566:	11 24       	eor	r1, r1
 568:	9f 57       	subi	r25, 0x7F	; 127
 56a:	50 40       	sbci	r21, 0x00	; 0
 56c:	9a f0       	brmi	.+38     	; 0x594 <__mulsf3_pse+0x88>
 56e:	f1 f0       	breq	.+60     	; 0x5ac <__mulsf3_pse+0xa0>
 570:	88 23       	and	r24, r24
 572:	4a f0       	brmi	.+18     	; 0x586 <__mulsf3_pse+0x7a>
 574:	ee 0f       	add	r30, r30
 576:	ff 1f       	adc	r31, r31
 578:	bb 1f       	adc	r27, r27
 57a:	66 1f       	adc	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	88 1f       	adc	r24, r24
 580:	91 50       	subi	r25, 0x01	; 1
 582:	50 40       	sbci	r21, 0x00	; 0
 584:	a9 f7       	brne	.-22     	; 0x570 <__mulsf3_pse+0x64>
 586:	9e 3f       	cpi	r25, 0xFE	; 254
 588:	51 05       	cpc	r21, r1
 58a:	80 f0       	brcs	.+32     	; 0x5ac <__mulsf3_pse+0xa0>
 58c:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>
 590:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_szero>
 594:	5f 3f       	cpi	r21, 0xFF	; 255
 596:	e4 f3       	brlt	.-8      	; 0x590 <__mulsf3_pse+0x84>
 598:	98 3e       	cpi	r25, 0xE8	; 232
 59a:	d4 f3       	brlt	.-12     	; 0x590 <__mulsf3_pse+0x84>
 59c:	86 95       	lsr	r24
 59e:	77 95       	ror	r23
 5a0:	67 95       	ror	r22
 5a2:	b7 95       	ror	r27
 5a4:	f7 95       	ror	r31
 5a6:	e7 95       	ror	r30
 5a8:	9f 5f       	subi	r25, 0xFF	; 255
 5aa:	c1 f7       	brne	.-16     	; 0x59c <__mulsf3_pse+0x90>
 5ac:	fe 2b       	or	r31, r30
 5ae:	88 0f       	add	r24, r24
 5b0:	91 1d       	adc	r25, r1
 5b2:	96 95       	lsr	r25
 5b4:	87 95       	ror	r24
 5b6:	97 f9       	bld	r25, 7
 5b8:	08 95       	ret

000005ba <pow>:
 5ba:	fa 01       	movw	r30, r20
 5bc:	ee 0f       	add	r30, r30
 5be:	ff 1f       	adc	r31, r31
 5c0:	30 96       	adiw	r30, 0x00	; 0
 5c2:	21 05       	cpc	r18, r1
 5c4:	31 05       	cpc	r19, r1
 5c6:	a1 f1       	breq	.+104    	; 0x630 <pow+0x76>
 5c8:	61 15       	cp	r22, r1
 5ca:	71 05       	cpc	r23, r1
 5cc:	61 f4       	brne	.+24     	; 0x5e6 <pow+0x2c>
 5ce:	80 38       	cpi	r24, 0x80	; 128
 5d0:	bf e3       	ldi	r27, 0x3F	; 63
 5d2:	9b 07       	cpc	r25, r27
 5d4:	49 f1       	breq	.+82     	; 0x628 <pow+0x6e>
 5d6:	68 94       	set
 5d8:	90 38       	cpi	r25, 0x80	; 128
 5da:	81 05       	cpc	r24, r1
 5dc:	61 f0       	breq	.+24     	; 0x5f6 <pow+0x3c>
 5de:	80 38       	cpi	r24, 0x80	; 128
 5e0:	bf ef       	ldi	r27, 0xFF	; 255
 5e2:	9b 07       	cpc	r25, r27
 5e4:	41 f0       	breq	.+16     	; 0x5f6 <pow+0x3c>
 5e6:	99 23       	and	r25, r25
 5e8:	4a f5       	brpl	.+82     	; 0x63c <pow+0x82>
 5ea:	ff 3f       	cpi	r31, 0xFF	; 255
 5ec:	e1 05       	cpc	r30, r1
 5ee:	31 05       	cpc	r19, r1
 5f0:	21 05       	cpc	r18, r1
 5f2:	19 f1       	breq	.+70     	; 0x63a <pow+0x80>
 5f4:	e8 94       	clt
 5f6:	08 94       	sec
 5f8:	e7 95       	ror	r30
 5fa:	d9 01       	movw	r26, r18
 5fc:	aa 23       	and	r26, r26
 5fe:	29 f4       	brne	.+10     	; 0x60a <pow+0x50>
 600:	ab 2f       	mov	r26, r27
 602:	be 2f       	mov	r27, r30
 604:	f8 5f       	subi	r31, 0xF8	; 248
 606:	d0 f3       	brcs	.-12     	; 0x5fc <pow+0x42>
 608:	10 c0       	rjmp	.+32     	; 0x62a <pow+0x70>
 60a:	ff 5f       	subi	r31, 0xFF	; 255
 60c:	70 f4       	brcc	.+28     	; 0x62a <pow+0x70>
 60e:	a6 95       	lsr	r26
 610:	e0 f7       	brcc	.-8      	; 0x60a <pow+0x50>
 612:	f7 39       	cpi	r31, 0x97	; 151
 614:	50 f0       	brcs	.+20     	; 0x62a <pow+0x70>
 616:	19 f0       	breq	.+6      	; 0x61e <pow+0x64>
 618:	ff 3a       	cpi	r31, 0xAF	; 175
 61a:	38 f4       	brcc	.+14     	; 0x62a <pow+0x70>
 61c:	9f 77       	andi	r25, 0x7F	; 127
 61e:	9f 93       	push	r25
 620:	0d d0       	rcall	.+26     	; 0x63c <pow+0x82>
 622:	0f 90       	pop	r0
 624:	07 fc       	sbrc	r0, 7
 626:	90 58       	subi	r25, 0x80	; 128
 628:	08 95       	ret
 62a:	46 f0       	brts	.+16     	; 0x63c <pow+0x82>
 62c:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_nan>
 630:	60 e0       	ldi	r22, 0x00	; 0
 632:	70 e0       	ldi	r23, 0x00	; 0
 634:	80 e8       	ldi	r24, 0x80	; 128
 636:	9f e3       	ldi	r25, 0x3F	; 63
 638:	08 95       	ret
 63a:	4f e7       	ldi	r20, 0x7F	; 127
 63c:	9f 77       	andi	r25, 0x7F	; 127
 63e:	5f 93       	push	r21
 640:	4f 93       	push	r20
 642:	3f 93       	push	r19
 644:	2f 93       	push	r18
 646:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <log>
 64a:	2f 91       	pop	r18
 64c:	3f 91       	pop	r19
 64e:	4f 91       	pop	r20
 650:	5f 91       	pop	r21
 652:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__mulsf3>
 656:	0c 94 35 03 	jmp	0x66a	; 0x66a <exp>
 65a:	29 f4       	brne	.+10     	; 0x666 <pow+0xac>
 65c:	16 f0       	brts	.+4      	; 0x662 <pow+0xa8>
 65e:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>
 662:	0c 94 69 02 	jmp	0x4d2	; 0x4d2 <__fp_zero>
 666:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_nan>

0000066a <exp>:
 66a:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_splitA>
 66e:	a8 f3       	brcs	.-22     	; 0x65a <pow+0xa0>
 670:	96 38       	cpi	r25, 0x86	; 134
 672:	a0 f7       	brcc	.-24     	; 0x65c <pow+0xa2>
 674:	07 f8       	bld	r0, 7
 676:	0f 92       	push	r0
 678:	e8 94       	clt
 67a:	2b e3       	ldi	r18, 0x3B	; 59
 67c:	3a ea       	ldi	r19, 0xAA	; 170
 67e:	48 eb       	ldi	r20, 0xB8	; 184
 680:	5f e7       	ldi	r21, 0x7F	; 127
 682:	0e 94 86 02 	call	0x50c	; 0x50c <__mulsf3_pse>
 686:	0f 92       	push	r0
 688:	0f 92       	push	r0
 68a:	0f 92       	push	r0
 68c:	4d b7       	in	r20, 0x3d	; 61
 68e:	5e b7       	in	r21, 0x3e	; 62
 690:	0f 92       	push	r0
 692:	0e 94 20 04 	call	0x840	; 0x840 <modf>
 696:	e8 e6       	ldi	r30, 0x68	; 104
 698:	f0 e0       	ldi	r31, 0x00	; 0
 69a:	0e 94 67 03 	call	0x6ce	; 0x6ce <__fp_powser>
 69e:	4f 91       	pop	r20
 6a0:	5f 91       	pop	r21
 6a2:	ef 91       	pop	r30
 6a4:	ff 91       	pop	r31
 6a6:	e5 95       	asr	r30
 6a8:	ee 1f       	adc	r30, r30
 6aa:	ff 1f       	adc	r31, r31
 6ac:	49 f0       	breq	.+18     	; 0x6c0 <exp+0x56>
 6ae:	fe 57       	subi	r31, 0x7E	; 126
 6b0:	e0 68       	ori	r30, 0x80	; 128
 6b2:	44 27       	eor	r20, r20
 6b4:	ee 0f       	add	r30, r30
 6b6:	44 1f       	adc	r20, r20
 6b8:	fa 95       	dec	r31
 6ba:	e1 f7       	brne	.-8      	; 0x6b4 <exp+0x4a>
 6bc:	41 95       	neg	r20
 6be:	55 0b       	sbc	r21, r21
 6c0:	0e 94 9a 03 	call	0x734	; 0x734 <ldexp>
 6c4:	0f 90       	pop	r0
 6c6:	07 fe       	sbrs	r0, 7
 6c8:	0c 94 8e 03 	jmp	0x71c	; 0x71c <inverse>
 6cc:	08 95       	ret

000006ce <__fp_powser>:
 6ce:	df 93       	push	r29
 6d0:	cf 93       	push	r28
 6d2:	1f 93       	push	r17
 6d4:	0f 93       	push	r16
 6d6:	ff 92       	push	r15
 6d8:	ef 92       	push	r14
 6da:	df 92       	push	r13
 6dc:	7b 01       	movw	r14, r22
 6de:	8c 01       	movw	r16, r24
 6e0:	68 94       	set
 6e2:	06 c0       	rjmp	.+12     	; 0x6f0 <__fp_powser+0x22>
 6e4:	da 2e       	mov	r13, r26
 6e6:	ef 01       	movw	r28, r30
 6e8:	0e 94 83 02 	call	0x506	; 0x506 <__mulsf3x>
 6ec:	fe 01       	movw	r30, r28
 6ee:	e8 94       	clt
 6f0:	a5 91       	lpm	r26, Z+
 6f2:	25 91       	lpm	r18, Z+
 6f4:	35 91       	lpm	r19, Z+
 6f6:	45 91       	lpm	r20, Z+
 6f8:	55 91       	lpm	r21, Z+
 6fa:	a6 f3       	brts	.-24     	; 0x6e4 <__fp_powser+0x16>
 6fc:	ef 01       	movw	r28, r30
 6fe:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__addsf3x>
 702:	fe 01       	movw	r30, r28
 704:	97 01       	movw	r18, r14
 706:	a8 01       	movw	r20, r16
 708:	da 94       	dec	r13
 70a:	69 f7       	brne	.-38     	; 0x6e6 <__fp_powser+0x18>
 70c:	df 90       	pop	r13
 70e:	ef 90       	pop	r14
 710:	ff 90       	pop	r15
 712:	0f 91       	pop	r16
 714:	1f 91       	pop	r17
 716:	cf 91       	pop	r28
 718:	df 91       	pop	r29
 71a:	08 95       	ret

0000071c <inverse>:
 71c:	9b 01       	movw	r18, r22
 71e:	ac 01       	movw	r20, r24
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	70 e0       	ldi	r23, 0x00	; 0
 724:	80 e8       	ldi	r24, 0x80	; 128
 726:	9f e3       	ldi	r25, 0x3F	; 63
 728:	0c 94 41 01 	jmp	0x282	; 0x282 <__divsf3>
 72c:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>
 730:	0c 94 c1 04 	jmp	0x982	; 0x982 <__fp_mpack>

00000734 <ldexp>:
 734:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_splitA>
 738:	d8 f3       	brcs	.-10     	; 0x730 <inverse+0x14>
 73a:	99 23       	and	r25, r25
 73c:	c9 f3       	breq	.-14     	; 0x730 <inverse+0x14>
 73e:	94 0f       	add	r25, r20
 740:	51 1d       	adc	r21, r1
 742:	a3 f3       	brvs	.-24     	; 0x72c <inverse+0x10>
 744:	91 50       	subi	r25, 0x01	; 1
 746:	50 40       	sbci	r21, 0x00	; 0
 748:	94 f0       	brlt	.+36     	; 0x76e <ldexp+0x3a>
 74a:	59 f0       	breq	.+22     	; 0x762 <ldexp+0x2e>
 74c:	88 23       	and	r24, r24
 74e:	32 f0       	brmi	.+12     	; 0x75c <ldexp+0x28>
 750:	66 0f       	add	r22, r22
 752:	77 1f       	adc	r23, r23
 754:	88 1f       	adc	r24, r24
 756:	91 50       	subi	r25, 0x01	; 1
 758:	50 40       	sbci	r21, 0x00	; 0
 75a:	c1 f7       	brne	.-16     	; 0x74c <ldexp+0x18>
 75c:	9e 3f       	cpi	r25, 0xFE	; 254
 75e:	51 05       	cpc	r21, r1
 760:	2c f7       	brge	.-54     	; 0x72c <inverse+0x10>
 762:	88 0f       	add	r24, r24
 764:	91 1d       	adc	r25, r1
 766:	96 95       	lsr	r25
 768:	87 95       	ror	r24
 76a:	97 f9       	bld	r25, 7
 76c:	08 95       	ret
 76e:	5f 3f       	cpi	r21, 0xFF	; 255
 770:	ac f0       	brlt	.+42     	; 0x79c <ldexp+0x68>
 772:	98 3e       	cpi	r25, 0xE8	; 232
 774:	9c f0       	brlt	.+38     	; 0x79c <ldexp+0x68>
 776:	bb 27       	eor	r27, r27
 778:	86 95       	lsr	r24
 77a:	77 95       	ror	r23
 77c:	67 95       	ror	r22
 77e:	b7 95       	ror	r27
 780:	08 f4       	brcc	.+2      	; 0x784 <ldexp+0x50>
 782:	b1 60       	ori	r27, 0x01	; 1
 784:	93 95       	inc	r25
 786:	c1 f7       	brne	.-16     	; 0x778 <ldexp+0x44>
 788:	bb 0f       	add	r27, r27
 78a:	58 f7       	brcc	.-42     	; 0x762 <ldexp+0x2e>
 78c:	11 f4       	brne	.+4      	; 0x792 <ldexp+0x5e>
 78e:	60 ff       	sbrs	r22, 0
 790:	e8 cf       	rjmp	.-48     	; 0x762 <ldexp+0x2e>
 792:	6f 5f       	subi	r22, 0xFF	; 255
 794:	7f 4f       	sbci	r23, 0xFF	; 255
 796:	8f 4f       	sbci	r24, 0xFF	; 255
 798:	9f 4f       	sbci	r25, 0xFF	; 255
 79a:	e3 cf       	rjmp	.-58     	; 0x762 <ldexp+0x2e>
 79c:	0c 94 6a 02 	jmp	0x4d4	; 0x4d4 <__fp_szero>
 7a0:	16 f0       	brts	.+4      	; 0x7a6 <ldexp+0x72>
 7a2:	0c 94 c1 04 	jmp	0x982	; 0x982 <__fp_mpack>
 7a6:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_nan>
 7aa:	68 94       	set
 7ac:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>

000007b0 <log>:
 7b0:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_splitA>
 7b4:	a8 f3       	brcs	.-22     	; 0x7a0 <ldexp+0x6c>
 7b6:	99 23       	and	r25, r25
 7b8:	c1 f3       	breq	.-16     	; 0x7aa <ldexp+0x76>
 7ba:	ae f3       	brts	.-22     	; 0x7a6 <ldexp+0x72>
 7bc:	df 93       	push	r29
 7be:	cf 93       	push	r28
 7c0:	1f 93       	push	r17
 7c2:	0f 93       	push	r16
 7c4:	ff 92       	push	r15
 7c6:	c9 2f       	mov	r28, r25
 7c8:	dd 27       	eor	r29, r29
 7ca:	88 23       	and	r24, r24
 7cc:	2a f0       	brmi	.+10     	; 0x7d8 <log+0x28>
 7ce:	21 97       	sbiw	r28, 0x01	; 1
 7d0:	66 0f       	add	r22, r22
 7d2:	77 1f       	adc	r23, r23
 7d4:	88 1f       	adc	r24, r24
 7d6:	da f7       	brpl	.-10     	; 0x7ce <log+0x1e>
 7d8:	20 e0       	ldi	r18, 0x00	; 0
 7da:	30 e0       	ldi	r19, 0x00	; 0
 7dc:	40 e8       	ldi	r20, 0x80	; 128
 7de:	5f eb       	ldi	r21, 0xBF	; 191
 7e0:	9f e3       	ldi	r25, 0x3F	; 63
 7e2:	88 39       	cpi	r24, 0x98	; 152
 7e4:	20 f0       	brcs	.+8      	; 0x7ee <log+0x3e>
 7e6:	80 3e       	cpi	r24, 0xE0	; 224
 7e8:	38 f0       	brcs	.+14     	; 0x7f8 <log+0x48>
 7ea:	21 96       	adiw	r28, 0x01	; 1
 7ec:	8f 77       	andi	r24, 0x7F	; 127
 7ee:	0e 94 55 04 	call	0x8aa	; 0x8aa <__addsf3>
 7f2:	e0 e9       	ldi	r30, 0x90	; 144
 7f4:	f0 e0       	ldi	r31, 0x00	; 0
 7f6:	04 c0       	rjmp	.+8      	; 0x800 <__DATA_REGION_LENGTH__>
 7f8:	0e 94 55 04 	call	0x8aa	; 0x8aa <__addsf3>
 7fc:	ed eb       	ldi	r30, 0xBD	; 189
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	0e 94 67 03 	call	0x6ce	; 0x6ce <__fp_powser>
 804:	8b 01       	movw	r16, r22
 806:	be 01       	movw	r22, r28
 808:	ec 01       	movw	r28, r24
 80a:	fb 2e       	mov	r15, r27
 80c:	6f 57       	subi	r22, 0x7F	; 127
 80e:	71 09       	sbc	r23, r1
 810:	75 95       	asr	r23
 812:	77 1f       	adc	r23, r23
 814:	88 0b       	sbc	r24, r24
 816:	99 0b       	sbc	r25, r25
 818:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__floatsisf>
 81c:	28 e1       	ldi	r18, 0x18	; 24
 81e:	32 e7       	ldi	r19, 0x72	; 114
 820:	41 e3       	ldi	r20, 0x31	; 49
 822:	5f e3       	ldi	r21, 0x3F	; 63
 824:	0e 94 83 02 	call	0x506	; 0x506 <__mulsf3x>
 828:	af 2d       	mov	r26, r15
 82a:	98 01       	movw	r18, r16
 82c:	ae 01       	movw	r20, r28
 82e:	ff 90       	pop	r15
 830:	0f 91       	pop	r16
 832:	1f 91       	pop	r17
 834:	cf 91       	pop	r28
 836:	df 91       	pop	r29
 838:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__addsf3x>
 83c:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_round>

00000840 <modf>:
 840:	fa 01       	movw	r30, r20
 842:	dc 01       	movw	r26, r24
 844:	aa 0f       	add	r26, r26
 846:	bb 1f       	adc	r27, r27
 848:	9b 01       	movw	r18, r22
 84a:	ac 01       	movw	r20, r24
 84c:	bf 57       	subi	r27, 0x7F	; 127
 84e:	28 f4       	brcc	.+10     	; 0x85a <modf+0x1a>
 850:	22 27       	eor	r18, r18
 852:	33 27       	eor	r19, r19
 854:	44 27       	eor	r20, r20
 856:	50 78       	andi	r21, 0x80	; 128
 858:	20 c0       	rjmp	.+64     	; 0x89a <modf+0x5a>
 85a:	b7 51       	subi	r27, 0x17	; 23
 85c:	90 f4       	brcc	.+36     	; 0x882 <modf+0x42>
 85e:	ab 2f       	mov	r26, r27
 860:	00 24       	eor	r0, r0
 862:	46 95       	lsr	r20
 864:	37 95       	ror	r19
 866:	27 95       	ror	r18
 868:	01 1c       	adc	r0, r1
 86a:	a3 95       	inc	r26
 86c:	d2 f3       	brmi	.-12     	; 0x862 <modf+0x22>
 86e:	00 20       	and	r0, r0
 870:	71 f0       	breq	.+28     	; 0x88e <modf+0x4e>
 872:	22 0f       	add	r18, r18
 874:	33 1f       	adc	r19, r19
 876:	44 1f       	adc	r20, r20
 878:	b3 95       	inc	r27
 87a:	da f3       	brmi	.-10     	; 0x872 <modf+0x32>
 87c:	0e d0       	rcall	.+28     	; 0x89a <modf+0x5a>
 87e:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__subsf3>
 882:	61 30       	cpi	r22, 0x01	; 1
 884:	71 05       	cpc	r23, r1
 886:	a0 e8       	ldi	r26, 0x80	; 128
 888:	8a 07       	cpc	r24, r26
 88a:	b9 46       	sbci	r27, 0x69	; 105
 88c:	30 f4       	brcc	.+12     	; 0x89a <modf+0x5a>
 88e:	9b 01       	movw	r18, r22
 890:	ac 01       	movw	r20, r24
 892:	66 27       	eor	r22, r22
 894:	77 27       	eor	r23, r23
 896:	88 27       	eor	r24, r24
 898:	90 78       	andi	r25, 0x80	; 128
 89a:	30 96       	adiw	r30, 0x00	; 0
 89c:	21 f0       	breq	.+8      	; 0x8a6 <modf+0x66>
 89e:	20 83       	st	Z, r18
 8a0:	31 83       	std	Z+1, r19	; 0x01
 8a2:	42 83       	std	Z+2, r20	; 0x02
 8a4:	53 83       	std	Z+3, r21	; 0x03
 8a6:	08 95       	ret

000008a8 <__subsf3>:
 8a8:	50 58       	subi	r21, 0x80	; 128

000008aa <__addsf3>:
 8aa:	bb 27       	eor	r27, r27
 8ac:	aa 27       	eor	r26, r26
 8ae:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <__addsf3x>
 8b2:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_round>
 8b6:	0e 94 28 02 	call	0x450	; 0x450 <__fp_pscA>
 8ba:	38 f0       	brcs	.+14     	; 0x8ca <__addsf3+0x20>
 8bc:	0e 94 2f 02 	call	0x45e	; 0x45e <__fp_pscB>
 8c0:	20 f0       	brcs	.+8      	; 0x8ca <__addsf3+0x20>
 8c2:	39 f4       	brne	.+14     	; 0x8d2 <__addsf3+0x28>
 8c4:	9f 3f       	cpi	r25, 0xFF	; 255
 8c6:	19 f4       	brne	.+6      	; 0x8ce <__addsf3+0x24>
 8c8:	26 f4       	brtc	.+8      	; 0x8d2 <__addsf3+0x28>
 8ca:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_nan>
 8ce:	0e f4       	brtc	.+2      	; 0x8d2 <__addsf3+0x28>
 8d0:	e0 95       	com	r30
 8d2:	e7 fb       	bst	r30, 7
 8d4:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_inf>

000008d8 <__addsf3x>:
 8d8:	e9 2f       	mov	r30, r25
 8da:	0e 94 47 02 	call	0x48e	; 0x48e <__fp_split3>
 8de:	58 f3       	brcs	.-42     	; 0x8b6 <__addsf3+0xc>
 8e0:	ba 17       	cp	r27, r26
 8e2:	62 07       	cpc	r22, r18
 8e4:	73 07       	cpc	r23, r19
 8e6:	84 07       	cpc	r24, r20
 8e8:	95 07       	cpc	r25, r21
 8ea:	20 f0       	brcs	.+8      	; 0x8f4 <__addsf3x+0x1c>
 8ec:	79 f4       	brne	.+30     	; 0x90c <__stack+0xd>
 8ee:	a6 f5       	brtc	.+104    	; 0x958 <__stack+0x59>
 8f0:	0c 94 69 02 	jmp	0x4d2	; 0x4d2 <__fp_zero>
 8f4:	0e f4       	brtc	.+2      	; 0x8f8 <__addsf3x+0x20>
 8f6:	e0 95       	com	r30
 8f8:	0b 2e       	mov	r0, r27
 8fa:	ba 2f       	mov	r27, r26
 8fc:	a0 2d       	mov	r26, r0
 8fe:	0b 01       	movw	r0, r22
 900:	b9 01       	movw	r22, r18
 902:	90 01       	movw	r18, r0
 904:	0c 01       	movw	r0, r24
 906:	ca 01       	movw	r24, r20
 908:	a0 01       	movw	r20, r0
 90a:	11 24       	eor	r1, r1
 90c:	ff 27       	eor	r31, r31
 90e:	59 1b       	sub	r21, r25
 910:	99 f0       	breq	.+38     	; 0x938 <__stack+0x39>
 912:	59 3f       	cpi	r21, 0xF9	; 249
 914:	50 f4       	brcc	.+20     	; 0x92a <__stack+0x2b>
 916:	50 3e       	cpi	r21, 0xE0	; 224
 918:	68 f1       	brcs	.+90     	; 0x974 <__stack+0x75>
 91a:	1a 16       	cp	r1, r26
 91c:	f0 40       	sbci	r31, 0x00	; 0
 91e:	a2 2f       	mov	r26, r18
 920:	23 2f       	mov	r18, r19
 922:	34 2f       	mov	r19, r20
 924:	44 27       	eor	r20, r20
 926:	58 5f       	subi	r21, 0xF8	; 248
 928:	f3 cf       	rjmp	.-26     	; 0x910 <__stack+0x11>
 92a:	46 95       	lsr	r20
 92c:	37 95       	ror	r19
 92e:	27 95       	ror	r18
 930:	a7 95       	ror	r26
 932:	f0 40       	sbci	r31, 0x00	; 0
 934:	53 95       	inc	r21
 936:	c9 f7       	brne	.-14     	; 0x92a <__stack+0x2b>
 938:	7e f4       	brtc	.+30     	; 0x958 <__stack+0x59>
 93a:	1f 16       	cp	r1, r31
 93c:	ba 0b       	sbc	r27, r26
 93e:	62 0b       	sbc	r22, r18
 940:	73 0b       	sbc	r23, r19
 942:	84 0b       	sbc	r24, r20
 944:	ba f0       	brmi	.+46     	; 0x974 <__stack+0x75>
 946:	91 50       	subi	r25, 0x01	; 1
 948:	a1 f0       	breq	.+40     	; 0x972 <__stack+0x73>
 94a:	ff 0f       	add	r31, r31
 94c:	bb 1f       	adc	r27, r27
 94e:	66 1f       	adc	r22, r22
 950:	77 1f       	adc	r23, r23
 952:	88 1f       	adc	r24, r24
 954:	c2 f7       	brpl	.-16     	; 0x946 <__stack+0x47>
 956:	0e c0       	rjmp	.+28     	; 0x974 <__stack+0x75>
 958:	ba 0f       	add	r27, r26
 95a:	62 1f       	adc	r22, r18
 95c:	73 1f       	adc	r23, r19
 95e:	84 1f       	adc	r24, r20
 960:	48 f4       	brcc	.+18     	; 0x974 <__stack+0x75>
 962:	87 95       	ror	r24
 964:	77 95       	ror	r23
 966:	67 95       	ror	r22
 968:	b7 95       	ror	r27
 96a:	f7 95       	ror	r31
 96c:	9e 3f       	cpi	r25, 0xFE	; 254
 96e:	08 f0       	brcs	.+2      	; 0x972 <__stack+0x73>
 970:	b0 cf       	rjmp	.-160    	; 0x8d2 <__addsf3+0x28>
 972:	93 95       	inc	r25
 974:	88 0f       	add	r24, r24
 976:	08 f0       	brcs	.+2      	; 0x97a <__stack+0x7b>
 978:	99 27       	eor	r25, r25
 97a:	ee 0f       	add	r30, r30
 97c:	97 95       	ror	r25
 97e:	87 95       	ror	r24
 980:	08 95       	ret

00000982 <__fp_mpack>:
 982:	9f 3f       	cpi	r25, 0xFF	; 255
 984:	31 f0       	breq	.+12     	; 0x992 <__fp_mpack_finite+0xc>

00000986 <__fp_mpack_finite>:
 986:	91 50       	subi	r25, 0x01	; 1
 988:	20 f4       	brcc	.+8      	; 0x992 <__fp_mpack_finite+0xc>
 98a:	87 95       	ror	r24
 98c:	77 95       	ror	r23
 98e:	67 95       	ror	r22
 990:	b7 95       	ror	r27
 992:	88 0f       	add	r24, r24
 994:	91 1d       	adc	r25, r1
 996:	96 95       	lsr	r25
 998:	87 95       	ror	r24
 99a:	97 f9       	bld	r25, 7
 99c:	08 95       	ret

0000099e <_exit>:
 99e:	f8 94       	cli

000009a0 <__stop_program>:
 9a0:	ff cf       	rjmp	.-2      	; 0x9a0 <__stop_program>
