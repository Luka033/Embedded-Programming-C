
Lab7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000454  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000073b  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000661  00000000  00000000  00000cab  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002d6  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  000015e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000391  00000000  00000000  00001714  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001da  00000000  00000000  00001aa5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001c7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__vector_7>
  20:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__vector_8>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__vector_14>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__vector_21>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 f6 00 	call	0x1ec	; 0x1ec <main>
  78:	0c 94 28 02 	jmp	0x450	; 0x450 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <adc_init>:

void adc_init(void) {
	//ADMUX &= 0b00010000;											// clear bits except reserved bit
	//ADMUX |= 0b01000001;											// set VCC reference and ADC1
	
	ADMUX |= (1 << REFS0) | (1 << MUX0);							// input channel
  80:	ec e7       	ldi	r30, 0x7C	; 124
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	81 64       	ori	r24, 0x41	; 65
  88:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN) | (1 << ADIE) | (1 << ADATE) |			// enable adc
  8a:	ea e7       	ldi	r30, 0x7A	; 122
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	8f 6a       	ori	r24, 0xAF	; 175
  92:	80 83       	st	Z, r24
	(1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);								
	ADCSRB |= (1 << ADTS0) | (1 << ADTS1);							// compare match	
  94:	eb e7       	ldi	r30, 0x7B	; 123
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	83 60       	ori	r24, 0x03	; 3
  9c:	80 83       	st	Z, r24
	DDRC &= ~(1 << PINC1);											// set pin 1 in PORTC as input
  9e:	87 b1       	in	r24, 0x07	; 7
  a0:	8d 7f       	andi	r24, 0xFD	; 253
  a2:	87 b9       	out	0x07, r24	; 7
	DDRB |= (1 << DDB5);											// set LED as output
  a4:	84 b1       	in	r24, 0x04	; 4
  a6:	80 62       	ori	r24, 0x20	; 32
  a8:	84 b9       	out	0x04, r24	; 4
  aa:	08 95       	ret

000000ac <timer0_init>:
}


void timer0_init() {
	TCCR0A |= (1 << WGM01);											// set timer 0 to CTC mode
  ac:	84 b5       	in	r24, 0x24	; 36
  ae:	82 60       	ori	r24, 0x02	; 2
  b0:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS02);											// set pre-scaler to 1024
  b2:	85 b5       	in	r24, 0x25	; 37
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1 << OCIE0A);										// overflow interrupt
  b8:	ee e6       	ldi	r30, 0x6E	; 110
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	80 81       	ld	r24, Z
  be:	82 60       	ori	r24, 0x02	; 2
  c0:	80 83       	st	Z, r24
	OCR0A = 0x9F;													// set top value for timer 0
  c2:	8f e9       	ldi	r24, 0x9F	; 159
  c4:	87 bd       	out	0x27, r24	; 39
  c6:	08 95       	ret

000000c8 <timer2_init>:

}

void timer2_init() {
	TCCR2A |= (1 << WGM21);											// set timer 2 to CTC mode
  c8:	e0 eb       	ldi	r30, 0xB0	; 176
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	82 60       	ori	r24, 0x02	; 2
  d0:	80 83       	st	Z, r24
	TIMSK2 |= (1 << OCIE2A) | (1 << OCIE2B);						// enable interrupts for A and B
  d2:	e0 e7       	ldi	r30, 0x70	; 112
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	86 60       	ori	r24, 0x06	; 6
  da:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS21) | (1 << CS22);							// set pre-scaler to 256
  dc:	e1 eb       	ldi	r30, 0xB1	; 177
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	86 60       	ori	r24, 0x06	; 6
  e4:	80 83       	st	Z, r24
	OCR2A =  0x4D;													// set top value for timer 2
  e6:	8d e4       	ldi	r24, 0x4D	; 77
  e8:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
  ec:	08 95       	ret

000000ee <__vector_14>:
}

ISR(TIMER0_COMPA_vect) {
  ee:	1f 92       	push	r1
  f0:	0f 92       	push	r0
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	0f 92       	push	r0
  f6:	11 24       	eor	r1, r1
  f8:	8f 93       	push	r24
  fa:	ef 93       	push	r30
  fc:	ff 93       	push	r31
	ADCSRA |= (1 << ADSC);											// timer 0 overflow occurs, start conversion
  fe:	ea e7       	ldi	r30, 0x7A	; 122
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	80 64       	ori	r24, 0x40	; 64
 106:	80 83       	st	Z, r24
}
 108:	ff 91       	pop	r31
 10a:	ef 91       	pop	r30
 10c:	8f 91       	pop	r24
 10e:	0f 90       	pop	r0
 110:	0f be       	out	0x3f, r0	; 63
 112:	0f 90       	pop	r0
 114:	1f 90       	pop	r1
 116:	18 95       	reti

00000118 <__vector_21>:

ISR(ADC_vect) {
 118:	1f 92       	push	r1
 11a:	0f 92       	push	r0
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	0f 92       	push	r0
 120:	11 24       	eor	r1, r1
 122:	cf 92       	push	r12
 124:	df 92       	push	r13
 126:	ef 92       	push	r14
 128:	ff 92       	push	r15
 12a:	2f 93       	push	r18
 12c:	3f 93       	push	r19
 12e:	4f 93       	push	r20
 130:	5f 93       	push	r21
 132:	6f 93       	push	r22
 134:	7f 93       	push	r23
 136:	8f 93       	push	r24
 138:	9f 93       	push	r25
 13a:	af 93       	push	r26
 13c:	bf 93       	push	r27
 13e:	cf 93       	push	r28
 140:	ef 93       	push	r30
 142:	ff 93       	push	r31
	OCR2B = OCR2A * (ADC / 1024.0);									// calculate OCR2B
 144:	c0 91 b3 00 	lds	r28, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
 148:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 14c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 2d 01 	call	0x25a	; 0x25a <__floatunsisf>
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	40 e8       	ldi	r20, 0x80	; 128
 15e:	5a e3       	ldi	r21, 0x3A	; 58
 160:	0e 94 93 01 	call	0x326	; 0x326 <__mulsf3>
 164:	6b 01       	movw	r12, r22
 166:	7c 01       	movw	r14, r24
 168:	6c 2f       	mov	r22, r28
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 2f 01 	call	0x25e	; 0x25e <__floatsisf>
 174:	a7 01       	movw	r20, r14
 176:	96 01       	movw	r18, r12
 178:	0e 94 93 01 	call	0x326	; 0x326 <__mulsf3>
 17c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__fixunssfsi>
 180:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
}
 184:	ff 91       	pop	r31
 186:	ef 91       	pop	r30
 188:	cf 91       	pop	r28
 18a:	bf 91       	pop	r27
 18c:	af 91       	pop	r26
 18e:	9f 91       	pop	r25
 190:	8f 91       	pop	r24
 192:	7f 91       	pop	r23
 194:	6f 91       	pop	r22
 196:	5f 91       	pop	r21
 198:	4f 91       	pop	r20
 19a:	3f 91       	pop	r19
 19c:	2f 91       	pop	r18
 19e:	ff 90       	pop	r15
 1a0:	ef 90       	pop	r14
 1a2:	df 90       	pop	r13
 1a4:	cf 90       	pop	r12
 1a6:	0f 90       	pop	r0
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	0f 90       	pop	r0
 1ac:	1f 90       	pop	r1
 1ae:	18 95       	reti

000001b0 <__vector_7>:

ISR(TIMER2_COMPA_vect) {
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	8f 93       	push	r24
	LEDON;
 1bc:	85 b1       	in	r24, 0x05	; 5
 1be:	80 62       	ori	r24, 0x20	; 32
 1c0:	85 b9       	out	0x05, r24	; 5
}
 1c2:	8f 91       	pop	r24
 1c4:	0f 90       	pop	r0
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	0f 90       	pop	r0
 1ca:	1f 90       	pop	r1
 1cc:	18 95       	reti

000001ce <__vector_8>:

ISR(TIMER2_COMPB_vect) {
 1ce:	1f 92       	push	r1
 1d0:	0f 92       	push	r0
 1d2:	0f b6       	in	r0, 0x3f	; 63
 1d4:	0f 92       	push	r0
 1d6:	11 24       	eor	r1, r1
 1d8:	8f 93       	push	r24
	LEDOFF;
 1da:	85 b1       	in	r24, 0x05	; 5
 1dc:	8f 7d       	andi	r24, 0xDF	; 223
 1de:	85 b9       	out	0x05, r24	; 5
}
 1e0:	8f 91       	pop	r24
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <main>:

int main(void)
{
	timer0_init();
 1ec:	0e 94 56 00 	call	0xac	; 0xac <timer0_init>
	timer2_init();												
 1f0:	0e 94 64 00 	call	0xc8	; 0xc8 <timer2_init>
	adc_init();
 1f4:	0e 94 40 00 	call	0x80	; 0x80 <adc_init>
	sei();
 1f8:	78 94       	sei
 1fa:	ff cf       	rjmp	.-2      	; 0x1fa <main+0xe>

000001fc <__fixunssfsi>:
 1fc:	0e 94 72 01 	call	0x2e4	; 0x2e4 <__fp_splitA>
 200:	88 f0       	brcs	.+34     	; 0x224 <__fixunssfsi+0x28>
 202:	9f 57       	subi	r25, 0x7F	; 127
 204:	98 f0       	brcs	.+38     	; 0x22c <__fixunssfsi+0x30>
 206:	b9 2f       	mov	r27, r25
 208:	99 27       	eor	r25, r25
 20a:	b7 51       	subi	r27, 0x17	; 23
 20c:	b0 f0       	brcs	.+44     	; 0x23a <__fixunssfsi+0x3e>
 20e:	e1 f0       	breq	.+56     	; 0x248 <__fixunssfsi+0x4c>
 210:	66 0f       	add	r22, r22
 212:	77 1f       	adc	r23, r23
 214:	88 1f       	adc	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	1a f0       	brmi	.+6      	; 0x220 <__fixunssfsi+0x24>
 21a:	ba 95       	dec	r27
 21c:	c9 f7       	brne	.-14     	; 0x210 <__fixunssfsi+0x14>
 21e:	14 c0       	rjmp	.+40     	; 0x248 <__fixunssfsi+0x4c>
 220:	b1 30       	cpi	r27, 0x01	; 1
 222:	91 f0       	breq	.+36     	; 0x248 <__fixunssfsi+0x4c>
 224:	0e 94 8c 01 	call	0x318	; 0x318 <__fp_zero>
 228:	b1 e0       	ldi	r27, 0x01	; 1
 22a:	08 95       	ret
 22c:	0c 94 8c 01 	jmp	0x318	; 0x318 <__fp_zero>
 230:	67 2f       	mov	r22, r23
 232:	78 2f       	mov	r23, r24
 234:	88 27       	eor	r24, r24
 236:	b8 5f       	subi	r27, 0xF8	; 248
 238:	39 f0       	breq	.+14     	; 0x248 <__fixunssfsi+0x4c>
 23a:	b9 3f       	cpi	r27, 0xF9	; 249
 23c:	cc f3       	brlt	.-14     	; 0x230 <__fixunssfsi+0x34>
 23e:	86 95       	lsr	r24
 240:	77 95       	ror	r23
 242:	67 95       	ror	r22
 244:	b3 95       	inc	r27
 246:	d9 f7       	brne	.-10     	; 0x23e <__fixunssfsi+0x42>
 248:	3e f4       	brtc	.+14     	; 0x258 <__fixunssfsi+0x5c>
 24a:	90 95       	com	r25
 24c:	80 95       	com	r24
 24e:	70 95       	com	r23
 250:	61 95       	neg	r22
 252:	7f 4f       	sbci	r23, 0xFF	; 255
 254:	8f 4f       	sbci	r24, 0xFF	; 255
 256:	9f 4f       	sbci	r25, 0xFF	; 255
 258:	08 95       	ret

0000025a <__floatunsisf>:
 25a:	e8 94       	clt
 25c:	09 c0       	rjmp	.+18     	; 0x270 <__floatsisf+0x12>

0000025e <__floatsisf>:
 25e:	97 fb       	bst	r25, 7
 260:	3e f4       	brtc	.+14     	; 0x270 <__floatsisf+0x12>
 262:	90 95       	com	r25
 264:	80 95       	com	r24
 266:	70 95       	com	r23
 268:	61 95       	neg	r22
 26a:	7f 4f       	sbci	r23, 0xFF	; 255
 26c:	8f 4f       	sbci	r24, 0xFF	; 255
 26e:	9f 4f       	sbci	r25, 0xFF	; 255
 270:	99 23       	and	r25, r25
 272:	a9 f0       	breq	.+42     	; 0x29e <__floatsisf+0x40>
 274:	f9 2f       	mov	r31, r25
 276:	96 e9       	ldi	r25, 0x96	; 150
 278:	bb 27       	eor	r27, r27
 27a:	93 95       	inc	r25
 27c:	f6 95       	lsr	r31
 27e:	87 95       	ror	r24
 280:	77 95       	ror	r23
 282:	67 95       	ror	r22
 284:	b7 95       	ror	r27
 286:	f1 11       	cpse	r31, r1
 288:	f8 cf       	rjmp	.-16     	; 0x27a <__floatsisf+0x1c>
 28a:	fa f4       	brpl	.+62     	; 0x2ca <__floatsisf+0x6c>
 28c:	bb 0f       	add	r27, r27
 28e:	11 f4       	brne	.+4      	; 0x294 <__floatsisf+0x36>
 290:	60 ff       	sbrs	r22, 0
 292:	1b c0       	rjmp	.+54     	; 0x2ca <__floatsisf+0x6c>
 294:	6f 5f       	subi	r22, 0xFF	; 255
 296:	7f 4f       	sbci	r23, 0xFF	; 255
 298:	8f 4f       	sbci	r24, 0xFF	; 255
 29a:	9f 4f       	sbci	r25, 0xFF	; 255
 29c:	16 c0       	rjmp	.+44     	; 0x2ca <__floatsisf+0x6c>
 29e:	88 23       	and	r24, r24
 2a0:	11 f0       	breq	.+4      	; 0x2a6 <__floatsisf+0x48>
 2a2:	96 e9       	ldi	r25, 0x96	; 150
 2a4:	11 c0       	rjmp	.+34     	; 0x2c8 <__floatsisf+0x6a>
 2a6:	77 23       	and	r23, r23
 2a8:	21 f0       	breq	.+8      	; 0x2b2 <__floatsisf+0x54>
 2aa:	9e e8       	ldi	r25, 0x8E	; 142
 2ac:	87 2f       	mov	r24, r23
 2ae:	76 2f       	mov	r23, r22
 2b0:	05 c0       	rjmp	.+10     	; 0x2bc <__floatsisf+0x5e>
 2b2:	66 23       	and	r22, r22
 2b4:	71 f0       	breq	.+28     	; 0x2d2 <__floatsisf+0x74>
 2b6:	96 e8       	ldi	r25, 0x86	; 134
 2b8:	86 2f       	mov	r24, r22
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	60 e0       	ldi	r22, 0x00	; 0
 2be:	2a f0       	brmi	.+10     	; 0x2ca <__floatsisf+0x6c>
 2c0:	9a 95       	dec	r25
 2c2:	66 0f       	add	r22, r22
 2c4:	77 1f       	adc	r23, r23
 2c6:	88 1f       	adc	r24, r24
 2c8:	da f7       	brpl	.-10     	; 0x2c0 <__floatsisf+0x62>
 2ca:	88 0f       	add	r24, r24
 2cc:	96 95       	lsr	r25
 2ce:	87 95       	ror	r24
 2d0:	97 f9       	bld	r25, 7
 2d2:	08 95       	ret

000002d4 <__fp_split3>:
 2d4:	57 fd       	sbrc	r21, 7
 2d6:	90 58       	subi	r25, 0x80	; 128
 2d8:	44 0f       	add	r20, r20
 2da:	55 1f       	adc	r21, r21
 2dc:	59 f0       	breq	.+22     	; 0x2f4 <__fp_splitA+0x10>
 2de:	5f 3f       	cpi	r21, 0xFF	; 255
 2e0:	71 f0       	breq	.+28     	; 0x2fe <__fp_splitA+0x1a>
 2e2:	47 95       	ror	r20

000002e4 <__fp_splitA>:
 2e4:	88 0f       	add	r24, r24
 2e6:	97 fb       	bst	r25, 7
 2e8:	99 1f       	adc	r25, r25
 2ea:	61 f0       	breq	.+24     	; 0x304 <__fp_splitA+0x20>
 2ec:	9f 3f       	cpi	r25, 0xFF	; 255
 2ee:	79 f0       	breq	.+30     	; 0x30e <__fp_splitA+0x2a>
 2f0:	87 95       	ror	r24
 2f2:	08 95       	ret
 2f4:	12 16       	cp	r1, r18
 2f6:	13 06       	cpc	r1, r19
 2f8:	14 06       	cpc	r1, r20
 2fa:	55 1f       	adc	r21, r21
 2fc:	f2 cf       	rjmp	.-28     	; 0x2e2 <__fp_split3+0xe>
 2fe:	46 95       	lsr	r20
 300:	f1 df       	rcall	.-30     	; 0x2e4 <__fp_splitA>
 302:	08 c0       	rjmp	.+16     	; 0x314 <__fp_splitA+0x30>
 304:	16 16       	cp	r1, r22
 306:	17 06       	cpc	r1, r23
 308:	18 06       	cpc	r1, r24
 30a:	99 1f       	adc	r25, r25
 30c:	f1 cf       	rjmp	.-30     	; 0x2f0 <__fp_splitA+0xc>
 30e:	86 95       	lsr	r24
 310:	71 05       	cpc	r23, r1
 312:	61 05       	cpc	r22, r1
 314:	08 94       	sec
 316:	08 95       	ret

00000318 <__fp_zero>:
 318:	e8 94       	clt

0000031a <__fp_szero>:
 31a:	bb 27       	eor	r27, r27
 31c:	66 27       	eor	r22, r22
 31e:	77 27       	eor	r23, r23
 320:	cb 01       	movw	r24, r22
 322:	97 f9       	bld	r25, 7
 324:	08 95       	ret

00000326 <__mulsf3>:
 326:	0e 94 a6 01 	call	0x34c	; 0x34c <__mulsf3x>
 32a:	0c 94 17 02 	jmp	0x42e	; 0x42e <__fp_round>
 32e:	0e 94 09 02 	call	0x412	; 0x412 <__fp_pscA>
 332:	38 f0       	brcs	.+14     	; 0x342 <__mulsf3+0x1c>
 334:	0e 94 10 02 	call	0x420	; 0x420 <__fp_pscB>
 338:	20 f0       	brcs	.+8      	; 0x342 <__mulsf3+0x1c>
 33a:	95 23       	and	r25, r21
 33c:	11 f0       	breq	.+4      	; 0x342 <__mulsf3+0x1c>
 33e:	0c 94 00 02 	jmp	0x400	; 0x400 <__fp_inf>
 342:	0c 94 06 02 	jmp	0x40c	; 0x40c <__fp_nan>
 346:	11 24       	eor	r1, r1
 348:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__fp_szero>

0000034c <__mulsf3x>:
 34c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__fp_split3>
 350:	70 f3       	brcs	.-36     	; 0x32e <__mulsf3+0x8>

00000352 <__mulsf3_pse>:
 352:	95 9f       	mul	r25, r21
 354:	c1 f3       	breq	.-16     	; 0x346 <__mulsf3+0x20>
 356:	95 0f       	add	r25, r21
 358:	50 e0       	ldi	r21, 0x00	; 0
 35a:	55 1f       	adc	r21, r21
 35c:	62 9f       	mul	r22, r18
 35e:	f0 01       	movw	r30, r0
 360:	72 9f       	mul	r23, r18
 362:	bb 27       	eor	r27, r27
 364:	f0 0d       	add	r31, r0
 366:	b1 1d       	adc	r27, r1
 368:	63 9f       	mul	r22, r19
 36a:	aa 27       	eor	r26, r26
 36c:	f0 0d       	add	r31, r0
 36e:	b1 1d       	adc	r27, r1
 370:	aa 1f       	adc	r26, r26
 372:	64 9f       	mul	r22, r20
 374:	66 27       	eor	r22, r22
 376:	b0 0d       	add	r27, r0
 378:	a1 1d       	adc	r26, r1
 37a:	66 1f       	adc	r22, r22
 37c:	82 9f       	mul	r24, r18
 37e:	22 27       	eor	r18, r18
 380:	b0 0d       	add	r27, r0
 382:	a1 1d       	adc	r26, r1
 384:	62 1f       	adc	r22, r18
 386:	73 9f       	mul	r23, r19
 388:	b0 0d       	add	r27, r0
 38a:	a1 1d       	adc	r26, r1
 38c:	62 1f       	adc	r22, r18
 38e:	83 9f       	mul	r24, r19
 390:	a0 0d       	add	r26, r0
 392:	61 1d       	adc	r22, r1
 394:	22 1f       	adc	r18, r18
 396:	74 9f       	mul	r23, r20
 398:	33 27       	eor	r19, r19
 39a:	a0 0d       	add	r26, r0
 39c:	61 1d       	adc	r22, r1
 39e:	23 1f       	adc	r18, r19
 3a0:	84 9f       	mul	r24, r20
 3a2:	60 0d       	add	r22, r0
 3a4:	21 1d       	adc	r18, r1
 3a6:	82 2f       	mov	r24, r18
 3a8:	76 2f       	mov	r23, r22
 3aa:	6a 2f       	mov	r22, r26
 3ac:	11 24       	eor	r1, r1
 3ae:	9f 57       	subi	r25, 0x7F	; 127
 3b0:	50 40       	sbci	r21, 0x00	; 0
 3b2:	9a f0       	brmi	.+38     	; 0x3da <__mulsf3_pse+0x88>
 3b4:	f1 f0       	breq	.+60     	; 0x3f2 <__mulsf3_pse+0xa0>
 3b6:	88 23       	and	r24, r24
 3b8:	4a f0       	brmi	.+18     	; 0x3cc <__mulsf3_pse+0x7a>
 3ba:	ee 0f       	add	r30, r30
 3bc:	ff 1f       	adc	r31, r31
 3be:	bb 1f       	adc	r27, r27
 3c0:	66 1f       	adc	r22, r22
 3c2:	77 1f       	adc	r23, r23
 3c4:	88 1f       	adc	r24, r24
 3c6:	91 50       	subi	r25, 0x01	; 1
 3c8:	50 40       	sbci	r21, 0x00	; 0
 3ca:	a9 f7       	brne	.-22     	; 0x3b6 <__mulsf3_pse+0x64>
 3cc:	9e 3f       	cpi	r25, 0xFE	; 254
 3ce:	51 05       	cpc	r21, r1
 3d0:	80 f0       	brcs	.+32     	; 0x3f2 <__mulsf3_pse+0xa0>
 3d2:	0c 94 00 02 	jmp	0x400	; 0x400 <__fp_inf>
 3d6:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__fp_szero>
 3da:	5f 3f       	cpi	r21, 0xFF	; 255
 3dc:	e4 f3       	brlt	.-8      	; 0x3d6 <__mulsf3_pse+0x84>
 3de:	98 3e       	cpi	r25, 0xE8	; 232
 3e0:	d4 f3       	brlt	.-12     	; 0x3d6 <__mulsf3_pse+0x84>
 3e2:	86 95       	lsr	r24
 3e4:	77 95       	ror	r23
 3e6:	67 95       	ror	r22
 3e8:	b7 95       	ror	r27
 3ea:	f7 95       	ror	r31
 3ec:	e7 95       	ror	r30
 3ee:	9f 5f       	subi	r25, 0xFF	; 255
 3f0:	c1 f7       	brne	.-16     	; 0x3e2 <__mulsf3_pse+0x90>
 3f2:	fe 2b       	or	r31, r30
 3f4:	88 0f       	add	r24, r24
 3f6:	91 1d       	adc	r25, r1
 3f8:	96 95       	lsr	r25
 3fa:	87 95       	ror	r24
 3fc:	97 f9       	bld	r25, 7
 3fe:	08 95       	ret

00000400 <__fp_inf>:
 400:	97 f9       	bld	r25, 7
 402:	9f 67       	ori	r25, 0x7F	; 127
 404:	80 e8       	ldi	r24, 0x80	; 128
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	60 e0       	ldi	r22, 0x00	; 0
 40a:	08 95       	ret

0000040c <__fp_nan>:
 40c:	9f ef       	ldi	r25, 0xFF	; 255
 40e:	80 ec       	ldi	r24, 0xC0	; 192
 410:	08 95       	ret

00000412 <__fp_pscA>:
 412:	00 24       	eor	r0, r0
 414:	0a 94       	dec	r0
 416:	16 16       	cp	r1, r22
 418:	17 06       	cpc	r1, r23
 41a:	18 06       	cpc	r1, r24
 41c:	09 06       	cpc	r0, r25
 41e:	08 95       	ret

00000420 <__fp_pscB>:
 420:	00 24       	eor	r0, r0
 422:	0a 94       	dec	r0
 424:	12 16       	cp	r1, r18
 426:	13 06       	cpc	r1, r19
 428:	14 06       	cpc	r1, r20
 42a:	05 06       	cpc	r0, r21
 42c:	08 95       	ret

0000042e <__fp_round>:
 42e:	09 2e       	mov	r0, r25
 430:	03 94       	inc	r0
 432:	00 0c       	add	r0, r0
 434:	11 f4       	brne	.+4      	; 0x43a <__fp_round+0xc>
 436:	88 23       	and	r24, r24
 438:	52 f0       	brmi	.+20     	; 0x44e <__fp_round+0x20>
 43a:	bb 0f       	add	r27, r27
 43c:	40 f4       	brcc	.+16     	; 0x44e <__fp_round+0x20>
 43e:	bf 2b       	or	r27, r31
 440:	11 f4       	brne	.+4      	; 0x446 <__fp_round+0x18>
 442:	60 ff       	sbrs	r22, 0
 444:	04 c0       	rjmp	.+8      	; 0x44e <__fp_round+0x20>
 446:	6f 5f       	subi	r22, 0xFF	; 255
 448:	7f 4f       	sbci	r23, 0xFF	; 255
 44a:	8f 4f       	sbci	r24, 0xFF	; 255
 44c:	9f 4f       	sbci	r25, 0xFF	; 255
 44e:	08 95       	ret

00000450 <_exit>:
 450:	f8 94       	cli

00000452 <__stop_program>:
 452:	ff cf       	rjmp	.-2      	; 0x452 <__stop_program>
