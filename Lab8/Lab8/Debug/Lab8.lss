
Lab8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000541  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .eeprom       00000001  00810000  00810000  00000540  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000030  00000000  00000000  00000541  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000574  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000005b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000898  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c9  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000042f  00000000  00000000  00001599  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  000019c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ab  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000f9  00000000  00000000  00001e17  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001f10  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 40 00 	jmp	0x80	; 0x80 <__vector_14>
  3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__vector_15>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 a5 00 	call	0x14a	; 0x14a <main>
  78:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <__vector_14>:
#define LEDON PORTB |= (1 << PORTB5)
#define LEDOFF PORTB &= ~(1 << PORTB5)

uint8_t EEMEM addressLocation;										// location to write to (figured out by compiler)

ISR(TIMER0_COMPA_vect) {
  80:	1f 92       	push	r1
  82:	0f 92       	push	r0
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	0f 92       	push	r0
  88:	11 24       	eor	r1, r1
  8a:	8f 93       	push	r24
	LEDON;
  8c:	85 b1       	in	r24, 0x05	; 5
  8e:	80 62       	ori	r24, 0x20	; 32
  90:	85 b9       	out	0x05, r24	; 5
}
  92:	8f 91       	pop	r24
  94:	0f 90       	pop	r0
  96:	0f be       	out	0x3f, r0	; 63
  98:	0f 90       	pop	r0
  9a:	1f 90       	pop	r1
  9c:	18 95       	reti

0000009e <__vector_15>:

ISR(TIMER0_COMPB_vect) {
  9e:	1f 92       	push	r1
  a0:	0f 92       	push	r0
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	0f 92       	push	r0
  a6:	11 24       	eor	r1, r1
  a8:	8f 93       	push	r24
	LEDOFF;
  aa:	85 b1       	in	r24, 0x05	; 5
  ac:	8f 7d       	andi	r24, 0xDF	; 223
  ae:	85 b9       	out	0x05, r24	; 5
}
  b0:	8f 91       	pop	r24
  b2:	0f 90       	pop	r0
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	0f 90       	pop	r0
  b8:	1f 90       	pop	r1
  ba:	18 95       	reti

000000bc <timer0_init>:

void timer0_init() {
	TCCR0A |= (1 << WGM01);											// set timer 0 to CTC mode
  bc:	84 b5       	in	r24, 0x24	; 36
  be:	82 60       	ori	r24, 0x02	; 2
  c0:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS02) | (1 << CS00);							// set pre-scaler to 1024
  c2:	85 b5       	in	r24, 0x25	; 37
  c4:	85 60       	ori	r24, 0x05	; 5
  c6:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1 << OCIE0A) | (1 << OCIE0B);						// enable interrupts for A and B
  c8:	ee e6       	ldi	r30, 0x6E	; 110
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	86 60       	ori	r24, 0x06	; 6
  d0:	80 83       	st	Z, r24
	OCR0A = 0x4D;													// set top value 
  d2:	8d e4       	ldi	r24, 0x4D	; 77
  d4:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0x00;													// duty cycle
  d6:	18 bc       	out	0x28, r1	; 40
  d8:	08 95       	ret

000000da <updateDutyCycle>:
}

void updateDutyCycle() {
  da:	cf 92       	push	r12
  dc:	df 92       	push	r13
  de:	ef 92       	push	r14
  e0:	ff 92       	push	r15
  e2:	cf 93       	push	r28
  e4:	df 93       	push	r29
	uint8_t dutyCycle = eeprom_read_byte(&addressLocation);			// read the most recently stored value in eeprom
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 4a 02 	call	0x494	; 0x494 <eeprom_read_byte>
	dutyCycle = (dutyCycle >= 100) ? 0 : dutyCycle + 10;			// set the duty cycle based on conditional
  ee:	84 36       	cpi	r24, 0x64	; 100
  f0:	18 f4       	brcc	.+6      	; 0xf8 <updateDutyCycle+0x1e>
  f2:	ca e0       	ldi	r28, 0x0A	; 10
  f4:	c8 0f       	add	r28, r24
  f6:	01 c0       	rjmp	.+2      	; 0xfa <updateDutyCycle+0x20>
  f8:	c0 e0       	ldi	r28, 0x00	; 0
	OCR0B = OCR0A * (dutyCycle / 100.0);							// set new duty cycle value
  fa:	d7 b5       	in	r29, 0x27	; 39
  fc:	6c 2f       	mov	r22, r28
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 51 01 	call	0x2a2	; 0x2a2 <__floatsisf>
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	48 ec       	ldi	r20, 0xC8	; 200
 10e:	52 e4       	ldi	r21, 0x42	; 66
 110:	0e 94 ae 00 	call	0x15c	; 0x15c <__divsf3>
 114:	6b 01       	movw	r12, r22
 116:	7c 01       	movw	r14, r24
 118:	6d 2f       	mov	r22, r29
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 51 01 	call	0x2a2	; 0x2a2 <__floatsisf>
 124:	a7 01       	movw	r20, r14
 126:	96 01       	movw	r18, r12
 128:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__mulsf3>
 12c:	0e 94 20 01 	call	0x240	; 0x240 <__fixunssfsi>
 130:	68 bd       	out	0x28, r22	; 40
	eeprom_update_byte(&addressLocation, dutyCycle);				// update new duty cycle value to eeprom
 132:	6c 2f       	mov	r22, r28
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 52 02 	call	0x4a4	; 0x4a4 <eeprom_update_byte>
}
 13c:	df 91       	pop	r29
 13e:	cf 91       	pop	r28
 140:	ff 90       	pop	r15
 142:	ef 90       	pop	r14
 144:	df 90       	pop	r13
 146:	cf 90       	pop	r12
 148:	08 95       	ret

0000014a <main>:

int main(void)
{
	DDRB |= (1 << DDB5);											// set LED as output
 14a:	84 b1       	in	r24, 0x04	; 4
 14c:	80 62       	ori	r24, 0x20	; 32
 14e:	84 b9       	out	0x04, r24	; 4
	timer0_init();
 150:	0e 94 5e 00 	call	0xbc	; 0xbc <timer0_init>
	updateDutyCycle();
 154:	0e 94 6d 00 	call	0xda	; 0xda <updateDutyCycle>
	sei();
 158:	78 94       	sei
 15a:	ff cf       	rjmp	.-2      	; 0x15a <main+0x10>

0000015c <__divsf3>:
 15c:	0e 94 c2 00 	call	0x184	; 0x184 <__divsf3x>
 160:	0c 94 a3 01 	jmp	0x346	; 0x346 <__fp_round>
 164:	0e 94 9c 01 	call	0x338	; 0x338 <__fp_pscB>
 168:	58 f0       	brcs	.+22     	; 0x180 <__divsf3+0x24>
 16a:	0e 94 95 01 	call	0x32a	; 0x32a <__fp_pscA>
 16e:	40 f0       	brcs	.+16     	; 0x180 <__divsf3+0x24>
 170:	29 f4       	brne	.+10     	; 0x17c <__divsf3+0x20>
 172:	5f 3f       	cpi	r21, 0xFF	; 255
 174:	29 f0       	breq	.+10     	; 0x180 <__divsf3+0x24>
 176:	0c 94 8c 01 	jmp	0x318	; 0x318 <__fp_inf>
 17a:	51 11       	cpse	r21, r1
 17c:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_szero>
 180:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_nan>

00000184 <__divsf3x>:
 184:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_split3>
 188:	68 f3       	brcs	.-38     	; 0x164 <__divsf3+0x8>

0000018a <__divsf3_pse>:
 18a:	99 23       	and	r25, r25
 18c:	b1 f3       	breq	.-20     	; 0x17a <__divsf3+0x1e>
 18e:	55 23       	and	r21, r21
 190:	91 f3       	breq	.-28     	; 0x176 <__divsf3+0x1a>
 192:	95 1b       	sub	r25, r21
 194:	55 0b       	sbc	r21, r21
 196:	bb 27       	eor	r27, r27
 198:	aa 27       	eor	r26, r26
 19a:	62 17       	cp	r22, r18
 19c:	73 07       	cpc	r23, r19
 19e:	84 07       	cpc	r24, r20
 1a0:	38 f0       	brcs	.+14     	; 0x1b0 <__divsf3_pse+0x26>
 1a2:	9f 5f       	subi	r25, 0xFF	; 255
 1a4:	5f 4f       	sbci	r21, 0xFF	; 255
 1a6:	22 0f       	add	r18, r18
 1a8:	33 1f       	adc	r19, r19
 1aa:	44 1f       	adc	r20, r20
 1ac:	aa 1f       	adc	r26, r26
 1ae:	a9 f3       	breq	.-22     	; 0x19a <__divsf3_pse+0x10>
 1b0:	35 d0       	rcall	.+106    	; 0x21c <__divsf3_pse+0x92>
 1b2:	0e 2e       	mov	r0, r30
 1b4:	3a f0       	brmi	.+14     	; 0x1c4 <__divsf3_pse+0x3a>
 1b6:	e0 e8       	ldi	r30, 0x80	; 128
 1b8:	32 d0       	rcall	.+100    	; 0x21e <__divsf3_pse+0x94>
 1ba:	91 50       	subi	r25, 0x01	; 1
 1bc:	50 40       	sbci	r21, 0x00	; 0
 1be:	e6 95       	lsr	r30
 1c0:	00 1c       	adc	r0, r0
 1c2:	ca f7       	brpl	.-14     	; 0x1b6 <__divsf3_pse+0x2c>
 1c4:	2b d0       	rcall	.+86     	; 0x21c <__divsf3_pse+0x92>
 1c6:	fe 2f       	mov	r31, r30
 1c8:	29 d0       	rcall	.+82     	; 0x21c <__divsf3_pse+0x92>
 1ca:	66 0f       	add	r22, r22
 1cc:	77 1f       	adc	r23, r23
 1ce:	88 1f       	adc	r24, r24
 1d0:	bb 1f       	adc	r27, r27
 1d2:	26 17       	cp	r18, r22
 1d4:	37 07       	cpc	r19, r23
 1d6:	48 07       	cpc	r20, r24
 1d8:	ab 07       	cpc	r26, r27
 1da:	b0 e8       	ldi	r27, 0x80	; 128
 1dc:	09 f0       	breq	.+2      	; 0x1e0 <__divsf3_pse+0x56>
 1de:	bb 0b       	sbc	r27, r27
 1e0:	80 2d       	mov	r24, r0
 1e2:	bf 01       	movw	r22, r30
 1e4:	ff 27       	eor	r31, r31
 1e6:	93 58       	subi	r25, 0x83	; 131
 1e8:	5f 4f       	sbci	r21, 0xFF	; 255
 1ea:	3a f0       	brmi	.+14     	; 0x1fa <__divsf3_pse+0x70>
 1ec:	9e 3f       	cpi	r25, 0xFE	; 254
 1ee:	51 05       	cpc	r21, r1
 1f0:	78 f0       	brcs	.+30     	; 0x210 <__divsf3_pse+0x86>
 1f2:	0c 94 8c 01 	jmp	0x318	; 0x318 <__fp_inf>
 1f6:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_szero>
 1fa:	5f 3f       	cpi	r21, 0xFF	; 255
 1fc:	e4 f3       	brlt	.-8      	; 0x1f6 <__divsf3_pse+0x6c>
 1fe:	98 3e       	cpi	r25, 0xE8	; 232
 200:	d4 f3       	brlt	.-12     	; 0x1f6 <__divsf3_pse+0x6c>
 202:	86 95       	lsr	r24
 204:	77 95       	ror	r23
 206:	67 95       	ror	r22
 208:	b7 95       	ror	r27
 20a:	f7 95       	ror	r31
 20c:	9f 5f       	subi	r25, 0xFF	; 255
 20e:	c9 f7       	brne	.-14     	; 0x202 <__divsf3_pse+0x78>
 210:	88 0f       	add	r24, r24
 212:	91 1d       	adc	r25, r1
 214:	96 95       	lsr	r25
 216:	87 95       	ror	r24
 218:	97 f9       	bld	r25, 7
 21a:	08 95       	ret
 21c:	e1 e0       	ldi	r30, 0x01	; 1
 21e:	66 0f       	add	r22, r22
 220:	77 1f       	adc	r23, r23
 222:	88 1f       	adc	r24, r24
 224:	bb 1f       	adc	r27, r27
 226:	62 17       	cp	r22, r18
 228:	73 07       	cpc	r23, r19
 22a:	84 07       	cpc	r24, r20
 22c:	ba 07       	cpc	r27, r26
 22e:	20 f0       	brcs	.+8      	; 0x238 <__divsf3_pse+0xae>
 230:	62 1b       	sub	r22, r18
 232:	73 0b       	sbc	r23, r19
 234:	84 0b       	sbc	r24, r20
 236:	ba 0b       	sbc	r27, r26
 238:	ee 1f       	adc	r30, r30
 23a:	88 f7       	brcc	.-30     	; 0x21e <__divsf3_pse+0x94>
 23c:	e0 95       	com	r30
 23e:	08 95       	ret

00000240 <__fixunssfsi>:
 240:	0e 94 bc 01 	call	0x378	; 0x378 <__fp_splitA>
 244:	88 f0       	brcs	.+34     	; 0x268 <__fixunssfsi+0x28>
 246:	9f 57       	subi	r25, 0x7F	; 127
 248:	98 f0       	brcs	.+38     	; 0x270 <__fixunssfsi+0x30>
 24a:	b9 2f       	mov	r27, r25
 24c:	99 27       	eor	r25, r25
 24e:	b7 51       	subi	r27, 0x17	; 23
 250:	b0 f0       	brcs	.+44     	; 0x27e <__fixunssfsi+0x3e>
 252:	e1 f0       	breq	.+56     	; 0x28c <__fixunssfsi+0x4c>
 254:	66 0f       	add	r22, r22
 256:	77 1f       	adc	r23, r23
 258:	88 1f       	adc	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	1a f0       	brmi	.+6      	; 0x264 <__fixunssfsi+0x24>
 25e:	ba 95       	dec	r27
 260:	c9 f7       	brne	.-14     	; 0x254 <__fixunssfsi+0x14>
 262:	14 c0       	rjmp	.+40     	; 0x28c <__fixunssfsi+0x4c>
 264:	b1 30       	cpi	r27, 0x01	; 1
 266:	91 f0       	breq	.+36     	; 0x28c <__fixunssfsi+0x4c>
 268:	0e 94 d6 01 	call	0x3ac	; 0x3ac <__fp_zero>
 26c:	b1 e0       	ldi	r27, 0x01	; 1
 26e:	08 95       	ret
 270:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__fp_zero>
 274:	67 2f       	mov	r22, r23
 276:	78 2f       	mov	r23, r24
 278:	88 27       	eor	r24, r24
 27a:	b8 5f       	subi	r27, 0xF8	; 248
 27c:	39 f0       	breq	.+14     	; 0x28c <__fixunssfsi+0x4c>
 27e:	b9 3f       	cpi	r27, 0xF9	; 249
 280:	cc f3       	brlt	.-14     	; 0x274 <__fixunssfsi+0x34>
 282:	86 95       	lsr	r24
 284:	77 95       	ror	r23
 286:	67 95       	ror	r22
 288:	b3 95       	inc	r27
 28a:	d9 f7       	brne	.-10     	; 0x282 <__fixunssfsi+0x42>
 28c:	3e f4       	brtc	.+14     	; 0x29c <__fixunssfsi+0x5c>
 28e:	90 95       	com	r25
 290:	80 95       	com	r24
 292:	70 95       	com	r23
 294:	61 95       	neg	r22
 296:	7f 4f       	sbci	r23, 0xFF	; 255
 298:	8f 4f       	sbci	r24, 0xFF	; 255
 29a:	9f 4f       	sbci	r25, 0xFF	; 255
 29c:	08 95       	ret

0000029e <__floatunsisf>:
 29e:	e8 94       	clt
 2a0:	09 c0       	rjmp	.+18     	; 0x2b4 <__floatsisf+0x12>

000002a2 <__floatsisf>:
 2a2:	97 fb       	bst	r25, 7
 2a4:	3e f4       	brtc	.+14     	; 0x2b4 <__floatsisf+0x12>
 2a6:	90 95       	com	r25
 2a8:	80 95       	com	r24
 2aa:	70 95       	com	r23
 2ac:	61 95       	neg	r22
 2ae:	7f 4f       	sbci	r23, 0xFF	; 255
 2b0:	8f 4f       	sbci	r24, 0xFF	; 255
 2b2:	9f 4f       	sbci	r25, 0xFF	; 255
 2b4:	99 23       	and	r25, r25
 2b6:	a9 f0       	breq	.+42     	; 0x2e2 <__floatsisf+0x40>
 2b8:	f9 2f       	mov	r31, r25
 2ba:	96 e9       	ldi	r25, 0x96	; 150
 2bc:	bb 27       	eor	r27, r27
 2be:	93 95       	inc	r25
 2c0:	f6 95       	lsr	r31
 2c2:	87 95       	ror	r24
 2c4:	77 95       	ror	r23
 2c6:	67 95       	ror	r22
 2c8:	b7 95       	ror	r27
 2ca:	f1 11       	cpse	r31, r1
 2cc:	f8 cf       	rjmp	.-16     	; 0x2be <__floatsisf+0x1c>
 2ce:	fa f4       	brpl	.+62     	; 0x30e <__floatsisf+0x6c>
 2d0:	bb 0f       	add	r27, r27
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <__floatsisf+0x36>
 2d4:	60 ff       	sbrs	r22, 0
 2d6:	1b c0       	rjmp	.+54     	; 0x30e <__floatsisf+0x6c>
 2d8:	6f 5f       	subi	r22, 0xFF	; 255
 2da:	7f 4f       	sbci	r23, 0xFF	; 255
 2dc:	8f 4f       	sbci	r24, 0xFF	; 255
 2de:	9f 4f       	sbci	r25, 0xFF	; 255
 2e0:	16 c0       	rjmp	.+44     	; 0x30e <__floatsisf+0x6c>
 2e2:	88 23       	and	r24, r24
 2e4:	11 f0       	breq	.+4      	; 0x2ea <__floatsisf+0x48>
 2e6:	96 e9       	ldi	r25, 0x96	; 150
 2e8:	11 c0       	rjmp	.+34     	; 0x30c <__floatsisf+0x6a>
 2ea:	77 23       	and	r23, r23
 2ec:	21 f0       	breq	.+8      	; 0x2f6 <__floatsisf+0x54>
 2ee:	9e e8       	ldi	r25, 0x8E	; 142
 2f0:	87 2f       	mov	r24, r23
 2f2:	76 2f       	mov	r23, r22
 2f4:	05 c0       	rjmp	.+10     	; 0x300 <__floatsisf+0x5e>
 2f6:	66 23       	and	r22, r22
 2f8:	71 f0       	breq	.+28     	; 0x316 <__floatsisf+0x74>
 2fa:	96 e8       	ldi	r25, 0x86	; 134
 2fc:	86 2f       	mov	r24, r22
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	2a f0       	brmi	.+10     	; 0x30e <__floatsisf+0x6c>
 304:	9a 95       	dec	r25
 306:	66 0f       	add	r22, r22
 308:	77 1f       	adc	r23, r23
 30a:	88 1f       	adc	r24, r24
 30c:	da f7       	brpl	.-10     	; 0x304 <__floatsisf+0x62>
 30e:	88 0f       	add	r24, r24
 310:	96 95       	lsr	r25
 312:	87 95       	ror	r24
 314:	97 f9       	bld	r25, 7
 316:	08 95       	ret

00000318 <__fp_inf>:
 318:	97 f9       	bld	r25, 7
 31a:	9f 67       	ori	r25, 0x7F	; 127
 31c:	80 e8       	ldi	r24, 0x80	; 128
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	08 95       	ret

00000324 <__fp_nan>:
 324:	9f ef       	ldi	r25, 0xFF	; 255
 326:	80 ec       	ldi	r24, 0xC0	; 192
 328:	08 95       	ret

0000032a <__fp_pscA>:
 32a:	00 24       	eor	r0, r0
 32c:	0a 94       	dec	r0
 32e:	16 16       	cp	r1, r22
 330:	17 06       	cpc	r1, r23
 332:	18 06       	cpc	r1, r24
 334:	09 06       	cpc	r0, r25
 336:	08 95       	ret

00000338 <__fp_pscB>:
 338:	00 24       	eor	r0, r0
 33a:	0a 94       	dec	r0
 33c:	12 16       	cp	r1, r18
 33e:	13 06       	cpc	r1, r19
 340:	14 06       	cpc	r1, r20
 342:	05 06       	cpc	r0, r21
 344:	08 95       	ret

00000346 <__fp_round>:
 346:	09 2e       	mov	r0, r25
 348:	03 94       	inc	r0
 34a:	00 0c       	add	r0, r0
 34c:	11 f4       	brne	.+4      	; 0x352 <__fp_round+0xc>
 34e:	88 23       	and	r24, r24
 350:	52 f0       	brmi	.+20     	; 0x366 <__fp_round+0x20>
 352:	bb 0f       	add	r27, r27
 354:	40 f4       	brcc	.+16     	; 0x366 <__fp_round+0x20>
 356:	bf 2b       	or	r27, r31
 358:	11 f4       	brne	.+4      	; 0x35e <__fp_round+0x18>
 35a:	60 ff       	sbrs	r22, 0
 35c:	04 c0       	rjmp	.+8      	; 0x366 <__fp_round+0x20>
 35e:	6f 5f       	subi	r22, 0xFF	; 255
 360:	7f 4f       	sbci	r23, 0xFF	; 255
 362:	8f 4f       	sbci	r24, 0xFF	; 255
 364:	9f 4f       	sbci	r25, 0xFF	; 255
 366:	08 95       	ret

00000368 <__fp_split3>:
 368:	57 fd       	sbrc	r21, 7
 36a:	90 58       	subi	r25, 0x80	; 128
 36c:	44 0f       	add	r20, r20
 36e:	55 1f       	adc	r21, r21
 370:	59 f0       	breq	.+22     	; 0x388 <__fp_splitA+0x10>
 372:	5f 3f       	cpi	r21, 0xFF	; 255
 374:	71 f0       	breq	.+28     	; 0x392 <__fp_splitA+0x1a>
 376:	47 95       	ror	r20

00000378 <__fp_splitA>:
 378:	88 0f       	add	r24, r24
 37a:	97 fb       	bst	r25, 7
 37c:	99 1f       	adc	r25, r25
 37e:	61 f0       	breq	.+24     	; 0x398 <__fp_splitA+0x20>
 380:	9f 3f       	cpi	r25, 0xFF	; 255
 382:	79 f0       	breq	.+30     	; 0x3a2 <__fp_splitA+0x2a>
 384:	87 95       	ror	r24
 386:	08 95       	ret
 388:	12 16       	cp	r1, r18
 38a:	13 06       	cpc	r1, r19
 38c:	14 06       	cpc	r1, r20
 38e:	55 1f       	adc	r21, r21
 390:	f2 cf       	rjmp	.-28     	; 0x376 <__fp_split3+0xe>
 392:	46 95       	lsr	r20
 394:	f1 df       	rcall	.-30     	; 0x378 <__fp_splitA>
 396:	08 c0       	rjmp	.+16     	; 0x3a8 <__fp_splitA+0x30>
 398:	16 16       	cp	r1, r22
 39a:	17 06       	cpc	r1, r23
 39c:	18 06       	cpc	r1, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	f1 cf       	rjmp	.-30     	; 0x384 <__fp_splitA+0xc>
 3a2:	86 95       	lsr	r24
 3a4:	71 05       	cpc	r23, r1
 3a6:	61 05       	cpc	r22, r1
 3a8:	08 94       	sec
 3aa:	08 95       	ret

000003ac <__fp_zero>:
 3ac:	e8 94       	clt

000003ae <__fp_szero>:
 3ae:	bb 27       	eor	r27, r27
 3b0:	66 27       	eor	r22, r22
 3b2:	77 27       	eor	r23, r23
 3b4:	cb 01       	movw	r24, r22
 3b6:	97 f9       	bld	r25, 7
 3b8:	08 95       	ret

000003ba <__mulsf3>:
 3ba:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <__mulsf3x>
 3be:	0c 94 a3 01 	jmp	0x346	; 0x346 <__fp_round>
 3c2:	0e 94 95 01 	call	0x32a	; 0x32a <__fp_pscA>
 3c6:	38 f0       	brcs	.+14     	; 0x3d6 <__mulsf3+0x1c>
 3c8:	0e 94 9c 01 	call	0x338	; 0x338 <__fp_pscB>
 3cc:	20 f0       	brcs	.+8      	; 0x3d6 <__mulsf3+0x1c>
 3ce:	95 23       	and	r25, r21
 3d0:	11 f0       	breq	.+4      	; 0x3d6 <__mulsf3+0x1c>
 3d2:	0c 94 8c 01 	jmp	0x318	; 0x318 <__fp_inf>
 3d6:	0c 94 92 01 	jmp	0x324	; 0x324 <__fp_nan>
 3da:	11 24       	eor	r1, r1
 3dc:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_szero>

000003e0 <__mulsf3x>:
 3e0:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_split3>
 3e4:	70 f3       	brcs	.-36     	; 0x3c2 <__mulsf3+0x8>

000003e6 <__mulsf3_pse>:
 3e6:	95 9f       	mul	r25, r21
 3e8:	c1 f3       	breq	.-16     	; 0x3da <__mulsf3+0x20>
 3ea:	95 0f       	add	r25, r21
 3ec:	50 e0       	ldi	r21, 0x00	; 0
 3ee:	55 1f       	adc	r21, r21
 3f0:	62 9f       	mul	r22, r18
 3f2:	f0 01       	movw	r30, r0
 3f4:	72 9f       	mul	r23, r18
 3f6:	bb 27       	eor	r27, r27
 3f8:	f0 0d       	add	r31, r0
 3fa:	b1 1d       	adc	r27, r1
 3fc:	63 9f       	mul	r22, r19
 3fe:	aa 27       	eor	r26, r26
 400:	f0 0d       	add	r31, r0
 402:	b1 1d       	adc	r27, r1
 404:	aa 1f       	adc	r26, r26
 406:	64 9f       	mul	r22, r20
 408:	66 27       	eor	r22, r22
 40a:	b0 0d       	add	r27, r0
 40c:	a1 1d       	adc	r26, r1
 40e:	66 1f       	adc	r22, r22
 410:	82 9f       	mul	r24, r18
 412:	22 27       	eor	r18, r18
 414:	b0 0d       	add	r27, r0
 416:	a1 1d       	adc	r26, r1
 418:	62 1f       	adc	r22, r18
 41a:	73 9f       	mul	r23, r19
 41c:	b0 0d       	add	r27, r0
 41e:	a1 1d       	adc	r26, r1
 420:	62 1f       	adc	r22, r18
 422:	83 9f       	mul	r24, r19
 424:	a0 0d       	add	r26, r0
 426:	61 1d       	adc	r22, r1
 428:	22 1f       	adc	r18, r18
 42a:	74 9f       	mul	r23, r20
 42c:	33 27       	eor	r19, r19
 42e:	a0 0d       	add	r26, r0
 430:	61 1d       	adc	r22, r1
 432:	23 1f       	adc	r18, r19
 434:	84 9f       	mul	r24, r20
 436:	60 0d       	add	r22, r0
 438:	21 1d       	adc	r18, r1
 43a:	82 2f       	mov	r24, r18
 43c:	76 2f       	mov	r23, r22
 43e:	6a 2f       	mov	r22, r26
 440:	11 24       	eor	r1, r1
 442:	9f 57       	subi	r25, 0x7F	; 127
 444:	50 40       	sbci	r21, 0x00	; 0
 446:	9a f0       	brmi	.+38     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 448:	f1 f0       	breq	.+60     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 44a:	88 23       	and	r24, r24
 44c:	4a f0       	brmi	.+18     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 44e:	ee 0f       	add	r30, r30
 450:	ff 1f       	adc	r31, r31
 452:	bb 1f       	adc	r27, r27
 454:	66 1f       	adc	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	91 50       	subi	r25, 0x01	; 1
 45c:	50 40       	sbci	r21, 0x00	; 0
 45e:	a9 f7       	brne	.-22     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 460:	9e 3f       	cpi	r25, 0xFE	; 254
 462:	51 05       	cpc	r21, r1
 464:	80 f0       	brcs	.+32     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 466:	0c 94 8c 01 	jmp	0x318	; 0x318 <__fp_inf>
 46a:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_szero>
 46e:	5f 3f       	cpi	r21, 0xFF	; 255
 470:	e4 f3       	brlt	.-8      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 472:	98 3e       	cpi	r25, 0xE8	; 232
 474:	d4 f3       	brlt	.-12     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 476:	86 95       	lsr	r24
 478:	77 95       	ror	r23
 47a:	67 95       	ror	r22
 47c:	b7 95       	ror	r27
 47e:	f7 95       	ror	r31
 480:	e7 95       	ror	r30
 482:	9f 5f       	subi	r25, 0xFF	; 255
 484:	c1 f7       	brne	.-16     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 486:	fe 2b       	or	r31, r30
 488:	88 0f       	add	r24, r24
 48a:	91 1d       	adc	r25, r1
 48c:	96 95       	lsr	r25
 48e:	87 95       	ror	r24
 490:	97 f9       	bld	r25, 7
 492:	08 95       	ret

00000494 <eeprom_read_byte>:
 494:	f9 99       	sbic	0x1f, 1	; 31
 496:	fe cf       	rjmp	.-4      	; 0x494 <eeprom_read_byte>
 498:	92 bd       	out	0x22, r25	; 34
 49a:	81 bd       	out	0x21, r24	; 33
 49c:	f8 9a       	sbi	0x1f, 0	; 31
 49e:	99 27       	eor	r25, r25
 4a0:	80 b5       	in	r24, 0x20	; 32
 4a2:	08 95       	ret

000004a4 <eeprom_update_byte>:
 4a4:	26 2f       	mov	r18, r22

000004a6 <eeprom_update_r18>:
 4a6:	f9 99       	sbic	0x1f, 1	; 31
 4a8:	fe cf       	rjmp	.-4      	; 0x4a6 <eeprom_update_r18>
 4aa:	92 bd       	out	0x22, r25	; 34
 4ac:	81 bd       	out	0x21, r24	; 33
 4ae:	f8 9a       	sbi	0x1f, 0	; 31
 4b0:	01 97       	sbiw	r24, 0x01	; 1
 4b2:	00 b4       	in	r0, 0x20	; 32
 4b4:	02 16       	cp	r0, r18
 4b6:	39 f0       	breq	.+14     	; 0x4c6 <eeprom_update_r18+0x20>
 4b8:	1f ba       	out	0x1f, r1	; 31
 4ba:	20 bd       	out	0x20, r18	; 32
 4bc:	0f b6       	in	r0, 0x3f	; 63
 4be:	f8 94       	cli
 4c0:	fa 9a       	sbi	0x1f, 2	; 31
 4c2:	f9 9a       	sbi	0x1f, 1	; 31
 4c4:	0f be       	out	0x3f, r0	; 63
 4c6:	08 95       	ret

000004c8 <_exit>:
 4c8:	f8 94       	cli

000004ca <__stop_program>:
 4ca:	ff cf       	rjmp	.-2      	; 0x4ca <__stop_program>
